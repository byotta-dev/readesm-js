{"version":3,"sources":["webpack://EsmDownloader/webpack/bootstrap","webpack://EsmDownloader/./src/utils/Translation.ts","webpack://EsmDownloader/./src/utils/QString.ts","webpack://EsmDownloader/./src/utils/DataReader.ts","webpack://EsmDownloader/./src/DataTypes/DataType.ts","webpack://EsmDownloader/./src/CardBlocks/CardBlock.ts","webpack://EsmDownloader/./src/utils/FormatStrings.ts","webpack://EsmDownloader/./src/DataTypes/TimeReal.ts","webpack://EsmDownloader/./src/VuBlocks/VuBlock.ts","webpack://EsmDownloader/./node_modules/lodash/_root.js","webpack://EsmDownloader/./node_modules/lodash/isArray.js","webpack://EsmDownloader/./src/DataTypes/Timespan.ts","webpack://EsmDownloader/./src/DataTypes/FullCardNumber.ts","webpack://EsmDownloader/./node_modules/lodash/_getNative.js","webpack://EsmDownloader/./src/DataTypes/VehicleRegistration.ts","webpack://EsmDownloader/./src/utils/Converter.ts","webpack://EsmDownloader/./node_modules/lodash/_baseGetTag.js","webpack://EsmDownloader/./node_modules/lodash/isObjectLike.js","webpack://EsmDownloader/./src/DataTypes/Block.ts","webpack://EsmDownloader/./node_modules/lodash/_ListCache.js","webpack://EsmDownloader/./node_modules/lodash/_assocIndexOf.js","webpack://EsmDownloader/./node_modules/lodash/_Symbol.js","webpack://EsmDownloader/./node_modules/lodash/isObject.js","webpack://EsmDownloader/./node_modules/lodash/_nativeCreate.js","webpack://EsmDownloader/./node_modules/lodash/_getMapData.js","webpack://EsmDownloader/./node_modules/lodash/isSymbol.js","webpack://EsmDownloader/./node_modules/lodash/_toKey.js","webpack://EsmDownloader/./node_modules/lodash/_Map.js","webpack://EsmDownloader/./node_modules/lodash/_MapCache.js","webpack://EsmDownloader/./node_modules/lodash/isArguments.js","webpack://EsmDownloader/./node_modules/lodash/isBuffer.js","webpack://EsmDownloader/./node_modules/lodash/isTypedArray.js","webpack://EsmDownloader/./node_modules/lodash/isLength.js","webpack://EsmDownloader/./node_modules/lodash/_isKey.js","webpack://EsmDownloader/./src/DataTypes/TopLevelBlock.ts","webpack://EsmDownloader/./node_modules/lodash/padStart.js","webpack://EsmDownloader/./node_modules/lodash/_hasUnicode.js","webpack://EsmDownloader/./src/DataTypes/EncryptedCertificate.ts","webpack://EsmDownloader/./src/DataTypes/BlockParseError.ts","webpack://EsmDownloader/./node_modules/lodash/isEmpty.js","webpack://EsmDownloader/./node_modules/lodash/_Stack.js","webpack://EsmDownloader/./node_modules/lodash/eq.js","webpack://EsmDownloader/./node_modules/lodash/isFunction.js","webpack://EsmDownloader/./node_modules/lodash/_freeGlobal.js","webpack://EsmDownloader/./node_modules/lodash/_toSource.js","webpack://EsmDownloader/./node_modules/lodash/_baseIsEqual.js","webpack://EsmDownloader/./node_modules/lodash/_equalArrays.js","webpack://EsmDownloader/./node_modules/lodash/keys.js","webpack://EsmDownloader/(webpack)/buildin/module.js","webpack://EsmDownloader/./node_modules/lodash/_isIndex.js","webpack://EsmDownloader/./node_modules/lodash/_baseKeys.js","webpack://EsmDownloader/./node_modules/lodash/_isPrototype.js","webpack://EsmDownloader/./node_modules/lodash/isArrayLike.js","webpack://EsmDownloader/./node_modules/lodash/_getTag.js","webpack://EsmDownloader/./node_modules/lodash/_isStrictComparable.js","webpack://EsmDownloader/./node_modules/lodash/_matchesStrictComparable.js","webpack://EsmDownloader/./node_modules/lodash/_baseGet.js","webpack://EsmDownloader/./node_modules/lodash/_castPath.js","webpack://EsmDownloader/./node_modules/lodash/toString.js","webpack://EsmDownloader/./node_modules/lodash/_baseToString.js","webpack://EsmDownloader/./node_modules/lodash/_baseProperty.js","webpack://EsmDownloader/./node_modules/lodash/toInteger.js","webpack://EsmDownloader/./src/CardBlocks/Identification.ts","webpack://EsmDownloader/./node_modules/lodash/_stringSize.js","webpack://EsmDownloader/./src/DataTypes/ExtendedSerialNumber.ts","webpack://EsmDownloader/./src/CardBlocks/CardDriverActivity.ts","webpack://EsmDownloader/./src/DataTypes/ActivityChangeInfo.ts","webpack://EsmDownloader/./src/DataTypes/CardEventRecord.ts","webpack://EsmDownloader/./src/VuBlocks/VuOverview.ts","webpack://EsmDownloader/./src/DataTypes/Block11Record.ts","webpack://EsmDownloader/./src/DataTypes/CardSlots.ts","webpack://EsmDownloader/./src/Reporter/Reporter.ts","webpack://EsmDownloader/./src/main.EsmDownloader.ts","webpack://EsmDownloader/./node_modules/js-file-download/file-download.js","webpack://EsmDownloader/./src/EsmFile.ts","webpack://EsmDownloader/./src/VuBlocks/blockFactory.ts","webpack://EsmDownloader/./src/CardBlocks/cardBlockFactory.ts","webpack://EsmDownloader/./src/DataTypes/RawData.ts","webpack://EsmDownloader/./node_modules/lodash/findIndex.js","webpack://EsmDownloader/./node_modules/lodash/_baseFindIndex.js","webpack://EsmDownloader/./node_modules/lodash/_baseIteratee.js","webpack://EsmDownloader/./node_modules/lodash/_baseMatches.js","webpack://EsmDownloader/./node_modules/lodash/_baseIsMatch.js","webpack://EsmDownloader/./node_modules/lodash/_listCacheClear.js","webpack://EsmDownloader/./node_modules/lodash/_listCacheDelete.js","webpack://EsmDownloader/./node_modules/lodash/_listCacheGet.js","webpack://EsmDownloader/./node_modules/lodash/_listCacheHas.js","webpack://EsmDownloader/./node_modules/lodash/_listCacheSet.js","webpack://EsmDownloader/./node_modules/lodash/_stackClear.js","webpack://EsmDownloader/./node_modules/lodash/_stackDelete.js","webpack://EsmDownloader/./node_modules/lodash/_stackGet.js","webpack://EsmDownloader/./node_modules/lodash/_stackHas.js","webpack://EsmDownloader/./node_modules/lodash/_stackSet.js","webpack://EsmDownloader/./node_modules/lodash/_baseIsNative.js","webpack://EsmDownloader/(webpack)/buildin/global.js","webpack://EsmDownloader/./node_modules/lodash/_getRawTag.js","webpack://EsmDownloader/./node_modules/lodash/_objectToString.js","webpack://EsmDownloader/./node_modules/lodash/_isMasked.js","webpack://EsmDownloader/./node_modules/lodash/_coreJsData.js","webpack://EsmDownloader/./node_modules/lodash/_getValue.js","webpack://EsmDownloader/./node_modules/lodash/_mapCacheClear.js","webpack://EsmDownloader/./node_modules/lodash/_Hash.js","webpack://EsmDownloader/./node_modules/lodash/_hashClear.js","webpack://EsmDownloader/./node_modules/lodash/_hashDelete.js","webpack://EsmDownloader/./node_modules/lodash/_hashGet.js","webpack://EsmDownloader/./node_modules/lodash/_hashHas.js","webpack://EsmDownloader/./node_modules/lodash/_hashSet.js","webpack://EsmDownloader/./node_modules/lodash/_mapCacheDelete.js","webpack://EsmDownloader/./node_modules/lodash/_isKeyable.js","webpack://EsmDownloader/./node_modules/lodash/_mapCacheGet.js","webpack://EsmDownloader/./node_modules/lodash/_mapCacheHas.js","webpack://EsmDownloader/./node_modules/lodash/_mapCacheSet.js","webpack://EsmDownloader/./node_modules/lodash/_baseIsEqualDeep.js","webpack://EsmDownloader/./node_modules/lodash/_SetCache.js","webpack://EsmDownloader/./node_modules/lodash/_setCacheAdd.js","webpack://EsmDownloader/./node_modules/lodash/_setCacheHas.js","webpack://EsmDownloader/./node_modules/lodash/_arraySome.js","webpack://EsmDownloader/./node_modules/lodash/_cacheHas.js","webpack://EsmDownloader/./node_modules/lodash/_equalByTag.js","webpack://EsmDownloader/./node_modules/lodash/_Uint8Array.js","webpack://EsmDownloader/./node_modules/lodash/_mapToArray.js","webpack://EsmDownloader/./node_modules/lodash/_setToArray.js","webpack://EsmDownloader/./node_modules/lodash/_equalObjects.js","webpack://EsmDownloader/./node_modules/lodash/_getAllKeys.js","webpack://EsmDownloader/./node_modules/lodash/_baseGetAllKeys.js","webpack://EsmDownloader/./node_modules/lodash/_arrayPush.js","webpack://EsmDownloader/./node_modules/lodash/_getSymbols.js","webpack://EsmDownloader/./node_modules/lodash/_arrayFilter.js","webpack://EsmDownloader/./node_modules/lodash/stubArray.js","webpack://EsmDownloader/./node_modules/lodash/_arrayLikeKeys.js","webpack://EsmDownloader/./node_modules/lodash/_baseTimes.js","webpack://EsmDownloader/./node_modules/lodash/_baseIsArguments.js","webpack://EsmDownloader/./node_modules/lodash/stubFalse.js","webpack://EsmDownloader/./node_modules/lodash/_baseIsTypedArray.js","webpack://EsmDownloader/./node_modules/lodash/_baseUnary.js","webpack://EsmDownloader/./node_modules/lodash/_nodeUtil.js","webpack://EsmDownloader/./node_modules/lodash/_nativeKeys.js","webpack://EsmDownloader/./node_modules/lodash/_overArg.js","webpack://EsmDownloader/./node_modules/lodash/_DataView.js","webpack://EsmDownloader/./node_modules/lodash/_Promise.js","webpack://EsmDownloader/./node_modules/lodash/_Set.js","webpack://EsmDownloader/./node_modules/lodash/_WeakMap.js","webpack://EsmDownloader/./node_modules/lodash/_getMatchData.js","webpack://EsmDownloader/./node_modules/lodash/_baseMatchesProperty.js","webpack://EsmDownloader/./node_modules/lodash/get.js","webpack://EsmDownloader/./node_modules/lodash/_stringToPath.js","webpack://EsmDownloader/./node_modules/lodash/_memoizeCapped.js","webpack://EsmDownloader/./node_modules/lodash/memoize.js","webpack://EsmDownloader/./node_modules/lodash/_arrayMap.js","webpack://EsmDownloader/./node_modules/lodash/hasIn.js","webpack://EsmDownloader/./node_modules/lodash/_baseHasIn.js","webpack://EsmDownloader/./node_modules/lodash/_hasPath.js","webpack://EsmDownloader/./node_modules/lodash/identity.js","webpack://EsmDownloader/./node_modules/lodash/property.js","webpack://EsmDownloader/./node_modules/lodash/_basePropertyDeep.js","webpack://EsmDownloader/./node_modules/lodash/toFinite.js","webpack://EsmDownloader/./node_modules/lodash/toNumber.js","webpack://EsmDownloader/./src/DataTypes/Subblocks.ts","webpack://EsmDownloader/./src/CardBlocks/DriverCardApplicationIdentification.ts","webpack://EsmDownloader/./src/CardBlocks/LastCardDownload.ts","webpack://EsmDownloader/./src/CardBlocks/CardDrivingLicenseInformation.ts","webpack://EsmDownloader/./src/DataTypes/Name.ts","webpack://EsmDownloader/./src/DataTypes/BcdDate.ts","webpack://EsmDownloader/./node_modules/lodash/_createPadding.js","webpack://EsmDownloader/./node_modules/lodash/_baseRepeat.js","webpack://EsmDownloader/./node_modules/lodash/_castSlice.js","webpack://EsmDownloader/./node_modules/lodash/_baseSlice.js","webpack://EsmDownloader/./node_modules/lodash/_asciiSize.js","webpack://EsmDownloader/./node_modules/lodash/_unicodeSize.js","webpack://EsmDownloader/./node_modules/lodash/_stringToArray.js","webpack://EsmDownloader/./node_modules/lodash/_asciiToArray.js","webpack://EsmDownloader/./node_modules/lodash/_unicodeToArray.js","webpack://EsmDownloader/./src/CardBlocks/CardCurrentUse.ts","webpack://EsmDownloader/./src/CardBlocks/CardChipIdentification.ts","webpack://EsmDownloader/./src/CardBlocks/CardIccIdentification.ts","webpack://EsmDownloader/./src/DataTypes/BcdMonthYear.ts","webpack://EsmDownloader/./src/CardBlocks/CardControlActivityDataRecord.ts","webpack://EsmDownloader/./src/CardBlocks/RawCardDriverActivity.ts","webpack://EsmDownloader/./src/DataTypes/CardActivityDailyRecord.ts","webpack://EsmDownloader/./src/DataTypes/SvgDayActivity.ts","webpack://EsmDownloader/./src/DataTypes/SvgDayGraph.ts","webpack://EsmDownloader/./src/DataTypes/PictureGenerator.ts","webpack://EsmDownloader/./src/DataTypes/RawCardActivityDailyRecord.ts","webpack://EsmDownloader/./src/CardBlocks/CardEventData.ts","webpack://EsmDownloader/./src/CardBlocks/CardFaultData.ts","webpack://EsmDownloader/./src/CardBlocks/SpecificConditions.ts","webpack://EsmDownloader/./src/DataTypes/SpecificConditionRecord.ts","webpack://EsmDownloader/./src/CardBlocks/MemberStateCertificate.ts","webpack://EsmDownloader/./src/DataTypes/CertificateAuthority.ts","webpack://EsmDownloader/./src/CardBlocks/CardCertificate.ts","webpack://EsmDownloader/./src/CardBlocks/CardPlaceDailyWorkPeriod.ts","webpack://EsmDownloader/./src/DataTypes/PlaceRecord.ts","webpack://EsmDownloader/./src/CardBlocks/CardVehiclesUsed.ts","webpack://EsmDownloader/./src/DataTypes/CardVehicleRecord.ts","webpack://EsmDownloader/./src/VuBlocks/vuBlockFactory.ts","webpack://EsmDownloader/./src/VuBlocks/VuTechnical.ts","webpack://EsmDownloader/./src/DataTypes/VuCalibrationRecord.ts","webpack://EsmDownloader/./src/VuBlocks/VuCardData.ts","webpack://EsmDownloader/./src/VuBlocks/Block11.ts","webpack://EsmDownloader/./src/VuBlocks/Block13.ts","webpack://EsmDownloader/./src/VuBlocks/Block14.ts","webpack://EsmDownloader/./src/VuBlocks/VuEventsFaults.ts","webpack://EsmDownloader/./src/DataTypes/VuTimeAdjustmentRecord.ts","webpack://EsmDownloader/./src/DataTypes/VuEventRecord.ts","webpack://EsmDownloader/./src/DataTypes/VuFaultRecord.ts","webpack://EsmDownloader/./src/DataTypes/VuOverspeedingEventRecord.ts","webpack://EsmDownloader/./src/VuBlocks/VuActivities.ts","webpack://EsmDownloader/./src/VuBlocks/VuDetailedSpeedData.ts","webpack://EsmDownloader/./src/Reporter/JsonReporter.ts","webpack://EsmDownloader/./src/Reporter/HtmlReporter.ts","webpack://EsmDownloader/./src/Reporter/HtmlReporterTemplate.html.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","text","this","toString","argIndex","arg","argValue","rv","QString","replace","RegExp","readUint8","data","pos","DataView","slice","getUint8","readUint16","getUint16","readUint24","concatArrays","getUint32","readUint32","readBCD16","start","Uint8Array","readRawData","length","readString","toTextString","readCodePageString","stringData","DataReader","checkString","toHexString","isISO8859CodePageNumber","console","log","String","fromCharCode","apply","number","str","j","readSubblocksByCount","blockType","count","blocks","b","build","append","size","readSubblocksByLength","isDefaultValue","items","dataStart","datasize","byteLength","hasSignature","dataBlockSize","eventType","etype","major","minor","Number","tr","generalEvents","sevents","eventRecordPurpose","recordingPurposes","nationNumeric","country","countries","specificCondition","scond","specificConditions","calibrationPurpose","cpurp","cpurps","controlType","ctype","equipmentType","codes","dailyWorkPeriod","vals","regionNumeric","region","previous2","now","past","previous3","ancientpast","previous4","prehistory","manufacturerCode","code","FormatStrings","longMonthName","month","tm","time","TimeReal","fromTime_t","date","seconds","Date","toJSON","match","freeGlobal","freeSelf","self","root","Function","isArray","Array","begin","end","cardType","cardIssuingMemberState","cardNumber","className","title","printOn","report","tagValuePair","BLOCK_TYPE","FullCardNumber","baseIsNative","getValue","undefined","vehicleRegistrationNation","vehicleRegistrationNumber","staticSize","VehicleRegistration","dec2hexString","dec","substr","a1","a2","b1","b2","set","buffer","bcdbyte","getRawTag","objectToString","symToStringTag","constructor","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","clear","entry","has","eq","array","type","nativeCreate","getNative","isKeyable","map","__data__","baseGetTag","isObjectLike","isSymbol","result","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","arguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","reIsDeepProp","reIsPlainProp","test","validSignature","getBlockType","TopLevelBlock","createPadding","stringSize","toInteger","string","chars","strLength","reHasUnicode","sign","cndash","certificateAuthorityReference","writeBlock","EncryptedCertificate","errorMessage","allowSvg","baseKeys","getTag","isArrayLike","isPrototype","splice","tag","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","other","isObject","global","funcToString","func","e","baseIsEqualDeep","baseIsEqual","bitmask","customizer","stack","SetCache","arraySome","cacheHas","equalFunc","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","push","arrayLikeKeys","webpackPolyfill","deprecate","paths","children","reIsUint","nativeKeys","Ctor","isFunction","isLength","Promise","Set","WeakMap","toSource","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","resolve","ctorString","srcValue","castPath","toKey","path","isKey","stringToPath","baseToString","arrayMap","symbolProto","symbolToString","toFinite","remainder","cardIssuingAuthorityName","cardIssueDate","cardValidityBegin","cardExpiryDate","cardHolderName","cardHolderBirthDate","cardHolderPreferredLanguage","Identification","asciiSize","hasUnicode","unicodeSize","serialNumber","ExtendedSerialNumber","activityDataUncycled","readCyclicData","cardActivityDailyRecords","cd","cyclicData","toUint8Array","newestRecordLength","newestRecord","endOfNewestRecord","oldestRecord","writeArray","numberOfBlocks","printHtmlTimesheet","tablehead","durationsMonth","currentMonth","activityRecordDate","getMonth","table","formatClock","DRIVING","WORK","REST","SHORTREST","AVAILABLE","durations","k","activityChangeInfos","activity","duration","forEach","a","setDuration","newDuration","newIsSlotState","isSlotState","ActivityChangeInfo","UNKNOWN","heightHint","activityName","color","padStart","Math","floor","timespan","extraString","eventTime","eventVehicleRegistration","CardEventRecord","memberStateCertificate","vuCertificate","vehicleIdentificationNumber","vehicleRegistrationIdentification","currentDateTime","vuDownloadablePeriod","CardSlotsStatus","downloadingTime","companyOrWorkshopName","VuOverview","sometimesDuration","payloadData","Block11Record","cardNumberDriverSlotBegin","cardNumberCoDriverSlotBegin","cardNumberDriverSlotEnd","cardNumberCoDriverSlotEnd","CardSlots","nestLevel","collected","setTitle","newTitle","ray","defaultShown","arrayStart","arrayEnd","isEmpty","subBlock","fileDownload","convertToJson","ef","parseData","renderReport","jsonCollected","convertToHtml","saveFile","filename","mime","readEsmData","reject","xhr","XMLHttpRequest","open","responseType","onload","status","response","Error","statusText","onerror","msg","error","send","then","JSON","stringify","bom","blob","Blob","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","fileData","block","EsmFile","errorCounter","blockFactory","err","trace","suggestTitle","dateSuggestion","ov","findTypeInVector","id","act","it","vuBlockFactory","cardBlockFactory","typeOfTachographCardId","warn","RawData","findIndex","baseFindIndex","baseIteratee","nativeMax","max","predicate","fromIndex","fromRight","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","source","matchData","noCustomizer","objValue","COMPARE_PARTIAL_FLAG","assocIndexOf","pop","pairs","LARGE_ARRAY_SIZE","isMasked","reIsHostCtor","funcProto","reIsNative","g","nativeObjectToString","isOwn","unmasked","uid","coreJsData","maskSrcKey","exec","keys","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","getMapData","equalArrays","equalByTag","equalObjects","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","setCacheAdd","setCacheHas","values","add","cache","mapToArray","setToArray","symbolValueOf","valueOf","byteOffset","message","convert","getAllKeys","objProps","objLength","skipCtor","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","offset","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","process","types","require","binding","overArg","transform","isStrictComparable","hasIn","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","resolver","TypeError","memoized","args","Cache","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep","toNumber","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","isBinary","numberOfBytes","cardStructureVersion","noOfEventsPerType","noOfFaultsPerType","activityStructureLength","noOfCardVehicleRecords","noOfCardPlaceRecords","DriverCardApplicationIdentification","lastCardDownload","LastCardDownload","drivingLicenseIssuingAuthorithy","drivingLicenseIssuingNation","drivingLicenseNumber","CardDrivingLicenseInformation","surname","firstNames","Name","encodedDate","BcdDate","baseRepeat","castSlice","stringToArray","nativeCeil","ceil","charsLength","join","nativeFloor","baseSlice","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","rsSymbol","reUnicode","lastIndex","asciiToArray","unicodeToArray","split","sessionOpenTime","sessionOpenVehicle","CardCurrentUse","icSerialNumber","icManufacturingReference","CardChipIdentification","clockStop","cardExtendedSerialNumber","cardApprovalNumber","cardPersonaliserID","embedderIcAssemblerId","icIdentifier","CardIccIdentification","BcdMonthYear","controlTime","controlCardNumber","controlVehicleRegistration","controlDownloadPeriod","CardControlActivityDataRecord","RawCardDriverActivity","activityRecordLength","visualization","addSvgHull","drawBorderAndTimeAxis","drawLegend","from","height","content","width","activityRecordPreviousLength","activityPresenceCounter","activityDayDistance","RawCardActivityDailyRecord","cardEventRecord","CardEventData","CardFaultData","specificConditionRecord","SpecificConditions","entryTime","specificConditionType","SpecificConditionRecord","certificate","MemberStateCertificate","nationAlpha","keySerialNumber","additionalInfo","caIdentifer","CertificateAuthority","CardCertificate","placePointerNewestRecord","placeRecord","CardPlaceDailyWorkPeriod","entryTypeDailyWorkPeriod","dailyWorkPeriodCountry","dailyWorkPeriodRegion","vehicleOdometerValue","PlaceRecord","vehiclePointerNewestRecord","cardVehicleRecord","CardVehiclesUsed","vehicleOdometerBegin","vehicleOdometerEnd","vehicleUse","registration","vuDataBlockCounter","CardVehicleRecord","vuManufacturerName","vuManufacturerAddress","vuPartNumber","vuSerialNumber","vuSoftwareVersion","vuSoftInstallationDate","vuManufacturingDate","vuApprovalNumber","sensorSerialNumber","sensorApprovalNumber","sensorPairingDateFirst","vuCalibrationRecord","VuTechnical","workshopName","workshopAddress","workshopCardNumber","workshopCardExpiryDate","wVehicleCharacteristicConstant","kConstantOfRecordingEquipment","lTyreCircumference","tyreSize","authorisedSpeed","oldOdometerValue","newOdometerValue","oldTimeValue","newTimeValue","nextCalibrationDate","VuCalibrationRecord","VuCardData","header","block11Record","Block11","Block13","Block14","vuFaultRecord","vuEventRecord","lastOverspeedControlTime","firstOverspeedSince","numberOfOverspeedSince","vuOverspeedingEventRecord","vuTimeAdjustmentRecord","VuEventsFaults","VuTimeAdjustmentRecord","cardSlots","similarEventsNumber","VuEventRecord","VuFaultRecord","maxSpeedValue","averageSpeedValue","VuOverspeedingEventRecord","timeReal","odometerValueMidnight","VuActivities","VuDetailedSpeedData","JsonEntry","nestPath","currentEntry","normalizeJsonReport","CardActivityDailyRecord","dailyRecords","records","newEntry","linkNumber","toggleNumber","linkCollected","html","HTML_TEMPLATE","copy","HtmlReporter","replaceAmp","lTag","toggleAbleBlocks","showByDefault"],"mappings":"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","file":"main.EsmDownloader.bundle.3e6757943b62a021c40d.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 71);\n","\n\nexport function tr(text: string): string {\n    // no translation implemented\n    return text;\n}\n","\n\nexport default class QString {\n\n    value: string;\n    \n    protected argIndex: number;\n\n    constructor(value: string|QString = '') {\n        this.value = value.toString();\n        this.argIndex = 0;\n    }\n    \n    arg(argValue: string|number|QString) {\n        let rv = new QString();\n        rv.argIndex = this.argIndex + 1;\n        rv.value = this.value.replace(new RegExp(`%${rv.argIndex}`, 'g'), \"\" + argValue);\n        return rv;\n    }\n\n    toString() {\n        return this.value;\n    }\n\n}\n","\nimport Converter from 'utils/Converter';\nimport RawData from 'DataTypes/RawData';\nimport Block from 'DataTypes/Block';\nimport DataType from 'DataTypes/DataType';\nimport Subblocks from 'DataTypes/Subblocks';\n\n\nexport default class DataReader {\n\n    static readUint8(data: ArrayBuffer, pos: number) {\n        return new DataView(data.slice(pos, pos + 1)).getUint8(0)\n    }\n\n    static readUint16(data: ArrayBuffer, pos: number) {\n        return new DataView(data.slice(pos, pos + 2)).getUint16(0)\n    }\n\n    static readUint24(data: ArrayBuffer, pos: number) {\n        return new DataView(Converter.concatArrays([0], data.slice(pos, pos + 3))).getUint32(0)\n    }\n\n    static readUint32(data: ArrayBuffer, pos: number) {\n        return new DataView(data.slice(pos, pos + 4)).getUint32(0)\n    }\n\n    static readBCD16(data: ArrayBuffer, pos: number) {\n        let start = new Uint8Array(data.slice(pos, pos+2));\n        let rv = (start[0] >> 4) * 1000 + (start[0] & 0x0F) * 100 + (start[1] >> 4) * 10 + (start[1] & 0x0F);\n        // console.log(\"readBCD16: \" + RawData.toHexString(start) + \" -> \" + rv + \" (\" + DataReader.readUint16(data, pos) + \")\");\n        return rv;\n    }\n\n    static readRawData(data: ArrayBuffer, pos: number, length: number) {\n        return new RawData(data.slice(pos), length);\n    }\n\n    static readString(data: ArrayBuffer, pos: number, length: number) {\n        let rd = new RawData(data.slice(pos), length);\n        let rv = rd.toTextString();\n        rv = rv.replace(/\\s+$/g, '');\n        return rv;\n    }\n\n    static readCodePageString(data: ArrayBuffer, pos: number, length: number) {\n        let stringData = new Uint8Array(data.slice(pos, pos + length));\n        if (!DataReader.checkString(stringData.slice(1, -1))) {\n            return `Not a string: ${RawData.toHexString(stringData)}`;\n        }\n\n        if (DataReader.isISO8859CodePageNumber(stringData[0])) {\n            // add support for codecs\n        } else {\n            console.log(`${stringData[0]} is not a code page`);\n        }\n\n        let rv = String.fromCharCode.apply(null, stringData.slice(1, -1));\n        rv = rv.replace(/\\0/g, ' ');\n        rv = rv.replace(/\\s+$/g, '');\n        return rv;\n    }\n\n    static isISO8859CodePageNumber(number: number): boolean {\n        return number <= 16 && number != 0 && number != 12;\n    }\n\n    static checkString(str: Uint8Array) {\n        for (let j = 0; j < str.length; ++j) {\n            if (str[j] > 0x20 && str[j] != 0xFF && String.fromCharCode(str[j]) != '?') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    static readSubblocksByCount<T extends DataType>(blockType: {build(...args: any[]): T}, data: ArrayBuffer, pos: number, count: number): Subblocks<T> {\n        let blocks: Subblocks<T> = new Subblocks();\n\n        for(let i = 0; i < count; i++) {\n            let b = blockType.build(data.slice(pos));\n            blocks.append(b);\n            pos += b.size();\n        }\n\n        return blocks;\n    }\n\n    static readSubblocksByLength<T extends DataType>(blockType: {name: string; build(...args: any[]): T}, data: ArrayBuffer, pos: number, length: number): Subblocks<T> {\n        let i = 0;\n        let blocks: Subblocks<T> = new Subblocks();\n\n        while (i < length) {\n            //console.log(`Read subblock ${blockType.name} at ${i} of ${length}`);\n\n            let b = blockType.build(data.slice(pos+i));\n            blocks.append(b);\n            i += b.size();\n        }\n\n        return blocks;\n    }\n}\n","\nimport Block from 'DataTypes/Block';\n\n\nexport default class DataType extends Block {\n\n    constructor(data?: ArrayBuffer) {\n        super(data);\n    }\n\n    isDefaultValue() {\n        let items = new Uint8Array(this.dataStart.slice(0, this.size()));\n        for(let j = 0; j < items.length; j++) {\n            if (items[j] != 0x0 && items[j] != 0xFF && items[j] != 0x20) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","\nimport TopLevelBlock from 'DataTypes/TopLevelBlock';\nimport DataReader from 'utils/DataReader';\n\n\nexport default class CardBlock extends TopLevelBlock {\n    \n    datasize: number;\n\n    constructor(data: ArrayBuffer) {\n        super();\n\n        this.datasize = DataReader.readUint16(data, 3);\n\n        let bytesLeft = data.slice(5 + this.datasize).byteLength;\n        if (bytesLeft >= 5 + 128) {\n            if (DataReader.readUint16(data, 5 + this.datasize) == DataReader.readUint16(data, 0) \n                && DataReader.readUint8(data, 5 + this.datasize + 2) == 1) {\n                this.hasSignature = true;\n            }\n        }\n    }\n    \n    dataBlockSize() {\n        return this.datasize + 5;\n    }\n\n    size() {\n        return this.datasize + 5 + (this.hasSignature ? 5 + 128 : 0);\n    }\n}\n","\nimport {tr} from 'utils/Translation';\nimport QString from 'utils/QString';\n\nfunction QT_TR_NOOP(x: any) {\n    return x;\n}\n\nexport default class FormatStrings {\n\n    static eventType(etype: number): string {\n        let major = etype >> 4;\n        let minor = etype & 0xF;\n        \n        let rv = `${Number(etype)} - `;\n    \n        if (major == 0) {\n            rv += tr(\"General events: \");\n            let generalEvents = [\n                QT_TR_NOOP(\"No further details\"),\n                QT_TR_NOOP(\"Insertion of a non-valid card\"),\n                QT_TR_NOOP(\"Card conflict\"),\n                QT_TR_NOOP(\"Time overlap\"),\n                QT_TR_NOOP(\"Driving without an appropriate card\"),\n                QT_TR_NOOP(\"Card insertion while driving\"),\n                QT_TR_NOOP(\"Last card session not correctly closed\"),\n                QT_TR_NOOP(\"Over speeding\"),\n                QT_TR_NOOP(\"Power supply interruption\"),\n                QT_TR_NOOP(\"Motion data error\")\n            ];\n            if (minor <= 0x9) {\n                rv += tr(generalEvents[minor]);\n            } else {\n                rv += tr(\"RFU\");\n            }\n        } else if (major == 1) {\n            rv += tr(\"Vehicle unit related security breach attempt events: \");\n            let sevents = [\n                QT_TR_NOOP(\"No further details\"),\n                QT_TR_NOOP(\"Motion sensor authentication failure\"),\n                QT_TR_NOOP(\"Tachograph card authentication failure\"),\n                QT_TR_NOOP(\"Unauthorised change of motion sensor\"),\n                QT_TR_NOOP(\"Card data input integrity error\"),\n                QT_TR_NOOP(\"Stored user data integrity error\"),\n                QT_TR_NOOP(\"Internal data transfer error\"),\n                QT_TR_NOOP(\"Unauthorised case opening\"),\n                QT_TR_NOOP(\"Hardware sabotage\")\n            ];\n            if (minor <= 0x8) {\n                rv += tr(sevents[minor]);\n            } else {\n                rv += tr(\"RFU\");\n            }\n        } else if (major == 2) {\n            rv += tr(\"Sensor related security breach attempt events: \");\n            let sevents = [\n                QT_TR_NOOP(\"No further details\"),\n                QT_TR_NOOP(\"Authentication failure\"),\n                QT_TR_NOOP(\"Stored data integrity error\"),\n                QT_TR_NOOP(\"Internal data transfer error\"),\n                QT_TR_NOOP(\"Unauthorised case opening\"),\n                QT_TR_NOOP(\"Hardware sabotage\") \n            ];\n            if (minor <= 0x5) {\n                rv += tr(sevents[minor]);\n            } else {\n                rv += tr(\"RFU\");\n            }\n        } else if (major == 3) {\n            rv += tr(\"Recording equipment faults: \");\n            let sevents = [\n                QT_TR_NOOP(\"No further details\"),\n                QT_TR_NOOP(\"VU internal fault\"),\n                QT_TR_NOOP(\"Printer fault\"),\n                QT_TR_NOOP(\"Display fault\"),\n                QT_TR_NOOP(\"Downloading fault\"),\n                QT_TR_NOOP(\"Sensor fault\")\n            ];\n            if (minor <= 0x5) {\n                rv += tr(sevents[minor]);\n            } else {\n                rv += tr(\"RFU\");\n            }\n        } else if (major == 4) {\n            rv += tr(\"Card faults: \");\n            let sevents = [\n                \"No further details\" \n            ];\n            if (minor <= 0x1) {\n                rv += tr(sevents[minor]);\n            } else {\n                rv += tr(\"RFU\");\n            }\n        } else if (major >= 5 && major <= 7) {\n            rv += tr(\"RFU groups\");\n        } else if (major >= 8 && major <= 0xF) {\n            rv += tr(\"Manufacturer specific\");\n        } else {\n            rv += tr(\"(error: blame programmer)\");\n        }\n\n        return rv;\n    }\n\n    static eventRecordPurpose(etype: number): string {\n        let recordingPurposes = [\n            QT_TR_NOOP(\"one of the 10 most recent (or last) events or faults\"),\n            QT_TR_NOOP(\"the longest event for one of the last 10 days of occurrence\"),\n            QT_TR_NOOP(\"one of the 5 longest events over the last 365 days\"),\n            QT_TR_NOOP(\"the last event for one of the last 10 days of occurrence\"),\n            QT_TR_NOOP(\"the most serious event for one of the last 10 days of occurrence\"),\n            QT_TR_NOOP(\"one of the 5 most serious events over the last 365 days\"),\n            QT_TR_NOOP(\"the first event or fault having occurred after the last calibration\"),\n            QT_TR_NOOP(\"an active/on-going event or fault\")\n        ];\n        if (etype <= 7) {\n            return tr(recordingPurposes[etype]);\n        } else if (8 <= etype && etype <= 0x7F) {\n            return tr(\"RFU\");\n        } else if (0x80 <= etype && etype <= 0xFF) {\n            return tr(\"Manufacturer specific\");\n        } else {\n            return tr(\"(error: blame programmer)\");\n        }\n    }\n\n    static nationNumeric(country: number): string {\n        let countries = [\n            QT_TR_NOOP(\"No information available\"),\n            QT_TR_NOOP(\"Austria\"),\n            QT_TR_NOOP(\"Albania\"),\n            QT_TR_NOOP(\"Andorra\"),\n            QT_TR_NOOP(\"Armenia\"),\n            QT_TR_NOOP(\"Azerbaijan\"),\n            QT_TR_NOOP(\"Belgium\"),\n            QT_TR_NOOP(\"Bulgaria\"),\n            QT_TR_NOOP(\"Bosnia and Herzegovina\"),\n            QT_TR_NOOP(\"Belarus\"),\n            QT_TR_NOOP(\"Switzerland\"),\n            QT_TR_NOOP(\"Cyprus\"),\n            QT_TR_NOOP(\"Czech Republic\"),\n            QT_TR_NOOP(\"Germany\"),\n            QT_TR_NOOP(\"Denmark\"),\n            QT_TR_NOOP(\"Spain\"),\n            QT_TR_NOOP(\"Estonia\"),\n            QT_TR_NOOP(\"France\"),\n            QT_TR_NOOP(\"Finland\"),\n            QT_TR_NOOP(\"Liechtenstein\"),\n            QT_TR_NOOP(\"Faeroe Islands\"),\n            QT_TR_NOOP(\"United Kingdom\"),\n            QT_TR_NOOP(\"Georgia\"),\n            QT_TR_NOOP(\"Greece\"),\n            QT_TR_NOOP(\"Hungary\"),\n            QT_TR_NOOP(\"Croatia\"),\n            QT_TR_NOOP(\"Italy\"),\n            QT_TR_NOOP(\"Ireland\"),\n            QT_TR_NOOP(\"Iceland\"),\n            QT_TR_NOOP(\"Kazakhstan\"),\n            QT_TR_NOOP(\"Luxembourg\"),\n            QT_TR_NOOP(\"Lithuania\"),\n            QT_TR_NOOP(\"Latvia\"),\n            QT_TR_NOOP(\"Malta\"),\n            QT_TR_NOOP(\"Monaco\"),\n            QT_TR_NOOP(\"Republic of Moldova\"),\n            QT_TR_NOOP(\"Macedonia\"),\n            QT_TR_NOOP(\"Norway\"),\n            QT_TR_NOOP(\"Netherlands\"),\n            QT_TR_NOOP(\"Portugal\"),\n            QT_TR_NOOP(\"Poland\"),\n            QT_TR_NOOP(\"Romania\"),\n            QT_TR_NOOP(\"San Marino\"),\n            QT_TR_NOOP(\"Russian Federation\"),\n            QT_TR_NOOP(\"Sweden\"),\n            QT_TR_NOOP(\"Slovakia\"),\n            QT_TR_NOOP(\"Slovenia\"),\n            QT_TR_NOOP(\"Turkmenistan\"),\n            QT_TR_NOOP(\"Turkey\"),\n            QT_TR_NOOP(\"Ukraine\"),\n            QT_TR_NOOP(\"Vatican City\"),\n            QT_TR_NOOP(\"Yugoslavia\"),\n            QT_TR_NOOP(\"Montenegro\"), //new ones only found on https://dtc.jrc.ec.europa.eu/\n            QT_TR_NOOP(\"Serbia\"),\n            QT_TR_NOOP(\"Uzbekistan\"),\n            QT_TR_NOOP(\"Tajikistan\")\n        ];\n        if (country <= 0x37) {\n            return tr(countries[country]);\n        }\n        if (country <= 0xFC) {\n            return new QString(tr(\"%1 - Reserved for future use\"))\n                .arg(country).toString();\n        }\n        if (country == 0xFD) {\n            return tr(\"European Community\");\n        }\n        if (country == 0xFE) {\n            return tr(\"Europe, but not EC and not registered\");\n        }\n        if (country == 0xFF) {\n            return tr(\"outside of Europe, not registered\");\n        }\n        return tr(\"error in nationNumeric\");\n    }\n\n    static specificCondition(scond: number): string {\n        let specificConditions = [\n            QT_TR_NOOP(\"RFU\"),\n            QT_TR_NOOP(\"Out of scope - Begin\"),\n            QT_TR_NOOP(\"Out of scope - End\"),\n            QT_TR_NOOP(\"Ferry/Train crossing\")\n        ];\n        if (scond <= 0x3) {\n            return tr(specificConditions[scond]);\n        } else {\n            return tr(\"RFU\");\n        }\n    }\n\n    static calibrationPurpose(cpurp: number): string {\n        let cpurps = [\n            QT_TR_NOOP(\"reserved value (should not appear)\"),\n            QT_TR_NOOP(\"activation: recording of calibration parameters known, at the moment of the VU activation\"),\n            QT_TR_NOOP(\"first installation: first calibration of the VU after its activation\"),\n            QT_TR_NOOP(\"installation: first calibration of the VU in the current vehicle\"),\n            QT_TR_NOOP(\"periodic inspection\")\n        ];\n\n        if (cpurp <= 4) {\n            return tr(cpurps[cpurp]);\n        } else {\n            return tr(\"(not specified)\");\n        }\n    }\n\n    static controlType(ctype: number): string {\n        let rv = \"\";\n        if (ctype & (1 << 7)) {\n            rv += tr(\"card downloaded\") + \", \";\n        }\n        if (ctype & (1 << 6)) {\n            rv += tr(\"VU downloaded\") + \", \";\n        }\n        if (ctype & (1 << 5)) {\n            rv += tr(\"printing done\") + \", \";\n        }\n        if (ctype & (1 << 4)) {\n            rv += tr(\"display used\") + \", \";\n        }\n        return rv;\n    }\n\n    static equipmentType(value: number): string {\n        let codes = [\n            QT_TR_NOOP(\"Reserved\"),\n            QT_TR_NOOP(\"Driver Card\"),\n            QT_TR_NOOP(\"Workshop Card\"),\n            QT_TR_NOOP(\"Control Card\"),\n            QT_TR_NOOP(\"Company Card\"),\n            QT_TR_NOOP(\"Manufacturing Card\"),\n            QT_TR_NOOP(\"Vehicle Unit\"),\n            QT_TR_NOOP(\"Motion Sensor\")\n        ];\n\n        let rv: string;\n        if (value >= 0 && value <= 7) {\n            rv = tr(codes[value]);\n        } else {\n            rv = new QString(tr(\"RFU: %1\")).arg(value).toString();\n        }\n        return rv;\n    }\n\n    static dailyWorkPeriod(value: number): string {\n        let vals = [\n            QT_TR_NOOP(\"Begin, related time = card insertion time or time of entry\"),\n            QT_TR_NOOP(\"End, related time = card withdrawal time or time of entry\"),\n            QT_TR_NOOP(\"Begin, related time manually entered (start time)\"),\n            QT_TR_NOOP(\"End, related time manually entered (end of work period)\"),\n            QT_TR_NOOP(\"Begin, related time assumed by VU\"),\n            QT_TR_NOOP(\"End, related time assumed by VU\")\n        ];\n        if (value <= 5) {\n            return tr(vals[value]);\n        } else {\n            return new QString(tr(\"(not specified: %1)\"))\n                .arg(value).toString();\n        }\n    }\n\n    static regionNumeric(region: number): string {\n        let vals = [\n            QT_TR_NOOP(\"No information available\"),\n            QT_TR_NOOP(\"Andalucía\"),\n            QT_TR_NOOP(\"Aragón\"),\n            QT_TR_NOOP(\"Asturias\"),\n            QT_TR_NOOP(\"Cantabria\"),\n            QT_TR_NOOP(\"Cataluña\"),\n            QT_TR_NOOP(\"Castilla-León\"),\n            QT_TR_NOOP(\"Castilla-La-Mancha\"),\n            QT_TR_NOOP(\"Valencia\"),\n            QT_TR_NOOP(\"Extremadura\"),\n            QT_TR_NOOP(\"Galicia\"),\n            QT_TR_NOOP(\"Baleares\"),\n            QT_TR_NOOP(\"Canarias\"),\n            QT_TR_NOOP(\"La Rioja\"),\n            QT_TR_NOOP(\"Madrid\"),\n            QT_TR_NOOP(\"Murcia\"),\n            QT_TR_NOOP(\"Navarra\"),\n            QT_TR_NOOP(\"País Vasco\"),\n            QT_TR_NOOP(\"Ceuta\"),\n            QT_TR_NOOP(\"Melilla\")\n        ];\n        if (region <= 0x13) {\n            return tr(vals[region]);\n        } else {\n            return new QString(tr(\"Unknown region %1\"))\n                .arg(region).toString();\n        }\n    }\n    \n    static previous2(now: string, past: string): string {\n        return new QString(tr(\"%1 (formerly %2)\"))\n            .arg(now).arg(past).toString();\n    }\n\n    static previous3(now: string, past: string, ancientpast: string) {\n        return new QString(tr(\"%1 (formerly %2 and before that %3)\"))\n            .arg(now).arg(past).arg(ancientpast).toString();\n    }\n\n    static previous4(now: string, past: string, ancientpast: string, prehistory: string) {\n        return new QString(tr(\"%1 (formerly %2, before that %3 and before that %4)\"))\n            .arg(now).arg(past).arg(ancientpast).arg(prehistory).toString();\n    }\n\n    static manufacturerCode(code: number): string {\n        switch (code) {\n            case 0x00: return tr(\"No information available\");\n            case 0x01: return tr(\"Reserved value\");\n            case 0x10: return \"Actia S.A.\";\n            case 0x11: return \"Security Printing and Systems Ltd.\";\n            case 0x12: return FormatStrings.previous2(\"Austria Card Plastikkarten und Ausweissysteme GmbH\", \"Austria Card\");\n            case 0x13: return \"Agencija za komercijalnu djelatnost d.o.o (AKD)\";\n            case 0x15: return \"ASELSAN\";\n            case 0x17: return \"Real Casa de la Moneda\";\n            case 0x18: return \"BARBÉ S.R.L.\";\n            case 0x20: return \"CETIS d.d.\";\n            case 0x21: return \"certSIGN\";\n            case 0x22: return \"RUE Cryptotech\";\n            case 0x23: return \"Centr Modernizatcii Transporta OOO (CMT - LLC)\";\n            case 0x24: return \"Pars Ar-Ge Ltd\";\n            case 0x28: return \"Datakom\";\n            case 0x29: return \"DVLA\";\n            case 0x30: return FormatStrings.previous4(\"IDEMIA The Netherlands BV\", \"Morpho BV\", \"Sdu Identification B.V.\", \"Enschedé/Sdu B.V.\");\n            case 0x32: return FormatStrings.previous2(\"intellic GmbH\", \"EFKON AG.\");\n            case 0x38: return \"Fábrica Nacional de Moneda y Timbre\";\n            case 0x39: return \"First Print Yard\";\n            case 0x40: return \"Giesecke & Devrient GmbH\";\n            case 0x43: return \"Giesecke & Devrient GB Ltd.\";\n            case 0x44: return \"Giesecke & Devrient sa/nv\";\n            case 0x45: return \"GrafoCARD\";\n            case 0x48: return FormatStrings.previous2(\"Hungarian Banknote Printing Co. Ltd.\", \"PJRT\");\n            case 0x50: return \"Imprimerie Nationale\";\n            case 0x51: return \"Imprensa Nacional-Casa da Moeda, SA\";\n            case 0x52: return \"InfoCamere S.C.p.A\";\n            case 0x61: return \"KazTACHOnet LLP\";\n            case 0x68: return \"LESIKAR a.s.\";\n            case 0x69: return \"LEDA-SL\";\n            case 0x78: return \"NAP automotive Produkte GmbH\";\n            case 0x81: return FormatStrings.previous3(\"Morpho e-documents\", \"Sagem Orga\", \"ORGA Kartensysteme GmbH\");\n            case 0x82: return \"ORGA Zelenograd ZAO\";\n            case 0x84: return \"ORGA Kartensysteme GmbH\";\n            case 0x88: return FormatStrings.previous2(\"Asseco Czech Republic a.s.\", \"PVT a.s.\");\n            case 0x89: return \"Polska Wytwórnia Papierów Wartosciowych S.A. - PWPW S.A.\";\n            case 0x8A: return \"Papiery Powlekane Pasaco Sp. z o.o.\";\n            case 0x98: return \"TahoNetSoft\";\n            case 0xA1: return FormatStrings.previous4(\"Continental Automotive GmbH\", \"Siemens AG\", \"Siemens VDO Automotive\", \"Siemens Automotive\");\n            case 0xA2: return \"Stoneridge Electronics AB\";\n            case 0xA3: return FormatStrings.previous2(\"Gemalto\", \"Schlumberger SEMA, Axalto\");\n            case 0xA4: return \"3M Security Printing and Systems Ltd.\";\n            case 0xA5: return \"STMicroelectronics - Incard Division\";\n            case 0xA6: return \"STÁTNÍ TISKÁRNA CENIN, státní podnik\";\n            case 0xAB: return \"T-Systems International GmbH\";\n            case 0xAC: return FormatStrings.previous2(\"Gemalto AG\", \"Trüb AG\");\n            case 0xAD: return \"Trüb Baltic AS\";\n            case 0xAE: return \"TEMPEST a.s.\";\n            case 0xAF: return \"Trueb - DEMAX PLC\";\n            case 0xB0: return \"TAYROL LIMITED\";\n            case 0xB1: return \"UŽDAROJI AKCINĖ BENDROVĖ \\\"LODVILA\\\"\";\n            case 0xD8: return \"Union of Chambers and Commodity Exchanges of Turkey - TOBB\";\n            case 0xE0: return \"Turker Roll Paper Trade\";\n        }\n        return new QString(tr(\"Unknown Manufacturer %1 or equipment not type approved\")).arg(code).toString();\n    }\n\n    static longMonthName(month: number): string {\n        let months = [\n            'January', \n            'February', \n            'March', \n            'April', \n            'May',\n            'June', \n            'July', \n            'August', \n            'September',\n            'October', \n            'November', \n            'December'\n            ];\n        return months[month];\n    }\n}\n","\nimport Block from 'DataTypes/Block';\nimport DataReader from 'utils/DataReader';\nimport { tr } from 'utils/Translation';\n\n\nexport default class TimeReal extends Block {\n\n    time: Date;\n    \n    constructor(data: ArrayBuffer) {\n        super();\n\n        let tm = DataReader.readUint32(data, 0);\n        if (tm) {\n            this.time = TimeReal.fromTime_t(tm);\n        }\n    }\n    \n    date() {\n        return this.time;\n    }\n\n    static fromTime_t(seconds: number) {\n        return new Date(seconds * 1000);\n    }\n\n    toString() {\n        if (!this.time) {\n            return tr(\"undefined\");            \n        }\n\n        let rv = this.time.toJSON();\n        if (rv.match(/.*T00:00:00.000Z$/)) {\n            rv = rv.slice(0, 10);\n        }\n        return rv;\n    }\n}\n","\nimport TopLevelBlock from 'DataTypes/TopLevelBlock';\nimport DataReader from 'utils/DataReader';\n\n\nexport default class VuBlock extends TopLevelBlock {\n    \n    constructor(data: ArrayBuffer) {\n        super();\n    }\n}\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","\nimport Block from 'DataTypes/Block';\nimport TimeReal from 'DataTypes/TimeReal';\nimport DataReader from 'utils/DataReader';\nimport { tr } from 'utils/Translation';\n\n\nexport default class Timespan extends Block {\n\n    begin: TimeReal;\n    end: TimeReal;\n\n    constructor(data?: ArrayBuffer) {\n        super()\n        this.begin = new TimeReal(data);\n        this.end = new TimeReal(data.slice(4));\n    }\n\n    toString() {\n        //TODO\n        return `From ${this.begin} To ${this.end}`\n    }\n\n}","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport RawData from 'DataTypes/RawData';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport DataType from 'DataTypes/DataType';\nimport FormatStrings from 'utils/FormatStrings';\nimport Reporter from 'Reporter/Reporter';\nimport {tr} from 'utils/Translation';\n\n\n\nexport default class FullCardNumber extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    cardType: number;\n    cardIssuingMemberState: number;\n    cardNumber: string;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n\n        this.cardType = DataReader.readUint8(data, 0);\n        this.cardIssuingMemberState = DataReader.readUint8(data, 1);\n        this.cardNumber = DataReader.readString(data, 2, 16).toString();    \n    }\n\n    className() {\n        return \"FullCardNumber\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    \n    size() {\n        return 18;\n    }\n\n\n    toString() {\n\t\tlet qs = new QString(\"%1 (%2, %3)\")\n\t\t.arg(this.cardNumber)\n\t\t.arg(FormatStrings.nationNumeric(this.cardIssuingMemberState))\n\t\t.arg(FormatStrings.equipmentType(this.cardType));\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"cardType\"), FormatStrings.equipmentType(this.cardType));\n        report.tagValuePair(tr(\"cardIssuingMemberState\"), FormatStrings.nationNumeric(this.cardIssuingMemberState));\n        report.tagValuePair(tr(\"cardNumber\"), this.cardNumber);\n    }\n}\n\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\n\n\nexport default class VehicleRegistration extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    vehicleRegistrationNation: number;\n    vehicleRegistrationNumber: string;\n    static staticSize: number = 15;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.vehicleRegistrationNation = DataReader.readUint8(data, 0);\n        this.vehicleRegistrationNumber = DataReader.readCodePageString(data, 1, 14).toString();    \n    }\n\n    className() {\n        return \"VehicleRegistration\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 15;\n    }\n\n    toString() {\n\t\tlet qs = new QString(\"%1 (%2)\")\n\t\t\t.arg(this.vehicleRegistrationNumber)\n\t\t\t.arg(FormatStrings.nationNumeric(this.vehicleRegistrationNation)).toString();\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"vehicleRegistrationNation\"), FormatStrings.nationNumeric(this.vehicleRegistrationNation));\n        report.tagValuePair(tr(\"vehicleRegistrationNumber\"), this.vehicleRegistrationNumber);\n    }\n}\n\n","\nexport default class Converter {\n    \n    static dec2hexString(dec) {\n        // source: https://gist.github.com/agirorn/0e740d012b620968225de58859ccef5c\n        return '0x' + (dec + 0x10000).toString(16).substr(-4);\n    }\n\n    static concatArrays(a1: ArrayBuffer|Array<number>, a2: ArrayBuffer|Array<number>) {\n        let b1 = new Uint8Array(a1)\n        let b2 = new Uint8Array(a2)\n        let b = new Uint8Array(b1.byteLength + b2.byteLength);\n        \n        b.set(b1, 0);\n        b.set(b2, b1.byteLength);\n        return b.buffer;\n    }\n\n    static bcdbyte(c: any) {\n        let n = 0;\n        let m = 1;\n        n += (c & 0x0F) * m;\n        n += ((c>>4) & 0x0F) * m * 10;\n        return n;\n    }\n}\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","\nimport Reporter from 'Reporter/Reporter';\n\n\nexport default class Block {\n\n    dataStart: ArrayBuffer;\n\n    constructor(data?: ArrayBuffer) {\n        this.dataStart = data;\n    }\n\n    static build<T>(data?: ArrayBuffer): T {\n        let nm = {'class': this};\n        return new nm['class'](data) as any;\n    }\n \n    size(): number {\n        return 0;\n    }\n\n    className(): string {\n        return this.constructor.name;\n    }\n\n    title(): string {\n        return \"\";\n    }\n\n    toString(): string {\n        return \"\";\n    }\n\n    printOn(o: Reporter): void {\n        \n    }\n}\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","\nimport Block from 'DataTypes/Block';\n\n\nexport default class TopLevelBlock extends Block {\n\n    public static BLOCK_TYPE: number = 0;\n    \n    validSignature: boolean;\n    hasSignature: boolean;\n\n    constructor() {\n        super();\n\n        this.validSignature = false;\n        this.hasSignature = false;\n    }\n\n    getBlockType() {\n        return (<typeof TopLevelBlock>this.constructor).BLOCK_TYPE;        \n    }\n}\n","var createPadding = require('./_createPadding'),\n    stringSize = require('./_stringSize'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Pads `string` on the left side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padStart('abc', 6);\n * // => '   abc'\n *\n * _.padStart('abc', 6, '_-');\n * // => '_-_abc'\n *\n * _.padStart('abc', 3);\n * // => 'abc'\n */\nfunction padStart(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  return (length && strLength < length)\n    ? (createPadding(length - strLength, chars) + string)\n    : string;\n}\n\nmodule.exports = padStart;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport RawData from 'DataTypes/RawData';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport DataType from 'DataTypes/DataType';\nimport FormatStrings from 'utils/FormatStrings';\nimport Reporter from 'Reporter/Reporter';\nimport {tr} from 'utils/Translation';\n\nimport CertificateAuthority from 'DataTypes/CertificateAuthority';\n\n\nexport default class EncryptedCertificate extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    sign: RawData;\n    cndash: RawData;\n    certificateAuthorityReference: CertificateAuthority;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n\n        this.sign = DataReader.readRawData(data, 0, 128);\n        this.cndash = DataReader.readRawData(data, 128, 58);\n        this.certificateAuthorityReference = new CertificateAuthority(data.slice(186))    \n    }\n\n    className() {\n        return \"EncryptedCertificate\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    \n    size() {\n        return 194;\n    }\n\n\n    toString() {\n\t\tlet qs = new QString('EncryptedCertificate');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"sign\"), this.sign.toString());\n        report.tagValuePair(tr(\"cndash\"), this.cndash.toString());\n        report.writeBlock(this.certificateAuthorityReference, tr(\"certificateAuthorityReference\"));\n    }\n}\n\n","\n\nimport TopLevelBlock from 'DataTypes/TopLevelBlock';\nimport Reporter from 'Reporter/Reporter';\nimport {tr} from 'utils/Translation';\n\n\nexport default class BlockParseError extends TopLevelBlock {\n\n    errorMessage: string;\n    \n    constructor(errorMessage: ArrayBuffer|string) {\n        super();\n\n        this.errorMessage = errorMessage.toString();  \n    }\n\n    className() {\n        return \"BlockParseError\";\n    }\n\n    title() {\n        return \"Block Parse Error\";\n    }\n\n    toString() {\n\t\treturn \"Block Parse Error: \" + this.errorMessage;\n    }\n\n    printOn(report: Reporter) {\n        if (report.allowSvg()) {\n            report.tagValuePair(tr(\"errorMessage\"), `<h3 style=\"color: red\">${this.errorMessage}</h3>`);\n        } else {\n            report.tagValuePair(tr(\"errorMessage\"), this.errorMessage.toString());\n        }\n    }\n}\n\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport TimeReal from 'DataTypes/TimeReal';\nimport Name from 'DataTypes/Name';\nimport BcdDate from 'DataTypes/BcdDate';\n\n\nexport default class Identification extends CardBlock {\n\n    static BLOCK_TYPE = 0x0520;\n    \n\n    cardIssuingMemberState: number;\n    cardNumber: string;\n    cardIssuingAuthorityName: string;\n    cardIssueDate: TimeReal;\n    cardValidityBegin: TimeReal;\n    cardExpiryDate: TimeReal;\n    cardHolderName: Name;\n    cardHolderBirthDate: BcdDate;\n    cardHolderPreferredLanguage: string;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.cardIssuingMemberState = DataReader.readUint8(data, 5);\n        this.cardNumber = DataReader.readString(data, 6, 16).toString();\n        this.cardIssuingAuthorityName = DataReader.readCodePageString(data, 22, 36).toString();\n        this.cardIssueDate = new TimeReal(data.slice(58));\n        this.cardValidityBegin = new TimeReal(data.slice(62));\n        this.cardExpiryDate = new TimeReal(data.slice(66));\n        this.cardHolderName = new Name(data.slice(70));\n        this.cardHolderBirthDate = new BcdDate(data.slice(142));\n        this.cardHolderPreferredLanguage = DataReader.readString(data, 146, 2).toString();    \n    }\n\n    className() {\n        return \"Identification\";\n    }\n\n    title() {\n        return \"Card identification and card holder identification\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('Identification');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"cardIssuingMemberState\"), FormatStrings.nationNumeric(this.cardIssuingMemberState));\n        report.tagValuePair(tr(\"cardNumber\"), this.cardNumber);\n        report.tagValuePair(tr(\"cardIssuingAuthorityName\"), this.cardIssuingAuthorityName);\n        report.tagValuePair(tr(\"cardIssueDate\"), this.cardIssueDate.toString());\n        report.tagValuePair(tr(\"cardValidityBegin\"), this.cardValidityBegin.toString());\n        report.tagValuePair(tr(\"cardExpiryDate\"), this.cardExpiryDate.toString());\n        report.writeBlock(this.cardHolderName, tr(\"cardHolderName\"));\n        report.writeBlock(this.cardHolderBirthDate, tr(\"cardHolderBirthDate\"));\n        report.tagValuePair(tr(\"cardHolderPreferredLanguage\"), this.cardHolderPreferredLanguage);\n        if (this.dataBlockSize() != 148 ) {\n            report.tagValuePair(\"should have\", 148 );\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","var asciiSize = require('./_asciiSize'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeSize = require('./_unicodeSize');\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nmodule.exports = stringSize;\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport BcdMonthYear from 'DataTypes/BcdMonthYear';\n\n\nexport default class ExtendedSerialNumber extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    serialNumber: number;\n    date: BcdMonthYear;\n    equipmentType: number;\n    manufacturerCode: number;\n    static staticSize: number = 8;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.serialNumber = DataReader.readUint32(data, 0);\n        this.date = new BcdMonthYear(data.slice(4));\n        this.equipmentType = DataReader.readUint8(data, 6);\n        this.manufacturerCode = DataReader.readUint8(data, 7);    \n    }\n\n    className() {\n        return \"ExtendedSerialNumber\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 8;\n    }\n\n    toString() {\n\t\tlet qs = new QString(\"%1 (%2) %3, %4\")\n\t\t.arg(this.serialNumber)\n\t\t.arg(this.date.toString())\n\t\t.arg(FormatStrings.equipmentType(this.equipmentType))\n\t\t.arg(FormatStrings.manufacturerCode(this.manufacturerCode)).toString();\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"serialNumber\"), this.serialNumber);\n        report.writeBlock(this.date, tr(\"date\"));\n        report.tagValuePair(tr(\"equipmentType\"), FormatStrings.equipmentType(this.equipmentType));\n        report.tagValuePair(tr(\"manufacturerCode\"), FormatStrings.manufacturerCode(this.manufacturerCode));\n    }\n}\n\n","\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport RawData from 'DataTypes/RawData';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport DataType from 'DataTypes/DataType';\nimport FormatStrings from 'utils/FormatStrings';\nimport Reporter from 'Reporter/Reporter';\nimport {tr} from 'utils/Translation';\nimport RawCardDriverActivity from 'CardBlocks/RawCardDriverActivity';\nimport Subblocks from 'DataTypes/Subblocks';\nimport CardActivityDailyRecord from 'DataTypes/CardActivityDailyRecord';\nimport ActivityChangeInfo from 'DataTypes/ActivityChangeInfo';\n\n\nexport default class CardDriverActivity extends RawCardDriverActivity {\n\n    activityDataUncycled: ArrayBuffer;\n    cardActivityDailyRecords: Subblocks<CardActivityDailyRecord>;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.activityDataUncycled = this.readCyclicData();\n        this.cardActivityDailyRecords = DataReader.readSubblocksByLength<CardActivityDailyRecord>(\n            CardActivityDailyRecord, this.activityDataUncycled, 0, this.activityDataUncycled.byteLength\n        )\n    }\n\n    className() {\n        return \"CardDriverActivity\";\n    }\n\n    readCyclicData(): ArrayBuffer {\n        let rv: Uint8Array;\n        let cd = this.cyclicData.toUint8Array();\n\n        let newestRecordLength = DataReader.readUint16(this.cyclicData.data, this.newestRecord + 2);  // (cd[cd[2] % cd.length] << 8) + cd[cd[3] % cd.length]\n        let endOfNewestRecord = (this.newestRecord + newestRecordLength) % cd.length;\n\n        if (endOfNewestRecord < this.oldestRecord) {\n            // console.log(`readCyclicData #1 ${endOfNewestRecord} < ${this.oldestRecord}, newestRecordLength: ${newestRecordLength}, lenth: ${cd.length}`);\n            let a1 = cd.slice(this.oldestRecord, this.oldestRecord + cd.length - this.oldestRecord);\n            let a2 = cd.slice(0, endOfNewestRecord);\n\n            rv = new Uint8Array(a1.length + a2.length);\n            rv.set(a1, 0);\n            rv.set(a2, a1.length);                \n        } else {\n            // console.log(`readCyclicData #2 ${this.oldestRecord}, ${endOfNewestRecord}, ${cd.length}`);\n            rv = cd.slice(this.oldestRecord, this.oldestRecord + endOfNewestRecord - this.oldestRecord);\n        }\n\n        return rv.buffer;\n    }\n\n    printOn(report: Reporter) {\n        report.tagValuePair(tr(\"oldestRecord\"), this.oldestRecord);\n        report.tagValuePair(tr(\"newestRecord\"), this.newestRecord);\n        report.writeArray(this.cardActivityDailyRecords, tr(\"cardActivityDailyRecords\"));\n\n        if (report.allowSvg() && this.cardActivityDailyRecords.numberOfBlocks() > 0) {\n            this.printHtmlTimesheet(report);\n        }\n    }\n\n    printHtmlTimesheet(report: Reporter) {\n        let tablehead = \"<table><tr><th></th><th>Driving</th><th>Working</th><th>Rest</th><th>Available</th></tr>\";\n        let durationsMonth: number[] = [0, 0, 0, 0, 0, 0];\n        \n\t\tlet currentMonth = this.cardActivityDailyRecords.get(0).activityRecordDate.date().getMonth();\n        let table = new QString(\"<ul><li>%1:\")\n            .arg(new QString(tr(\"Timesheet for %1\"))\n                .arg(FormatStrings.longMonthName(currentMonth).toString())) + tablehead;\n\n\t\tfor (let j = 0; j < this.cardActivityDailyRecords.numberOfBlocks(); j++) {\n\t\t\tif (this.cardActivityDailyRecords.get(j).activityRecordDate.date().getMonth() != currentMonth) {\n\t\t\t\tcurrentMonth = this.cardActivityDailyRecords.get(j).activityRecordDate.date().getMonth();\n                table += new QString(\"<tr><th>Summary</th><th>%1</th><th>%2</th><th>%3</th><th>%4</th></tr>\")\n                    .arg(ActivityChangeInfo.formatClock(durationsMonth[ActivityChangeInfo.DRIVING])) \n                    .arg(ActivityChangeInfo.formatClock(durationsMonth[ActivityChangeInfo.WORK]))\n                    .arg(ActivityChangeInfo.formatClock(durationsMonth[ActivityChangeInfo.REST] + durationsMonth[ActivityChangeInfo.SHORTREST]))\n                    .arg(ActivityChangeInfo.formatClock(durationsMonth[ActivityChangeInfo.AVAILABLE]));\n\n\t\t\t\tdurationsMonth = [0, 0, 0, 0, 0, 0];\n                table += new QString(\"</table></li><li>%1:\")\n                    .arg(new QString(tr(\"Timesheet for %1\"))\n                        .arg(FormatStrings.longMonthName(currentMonth)).toString()) + tablehead;\n\t\t\t}\n\n            let durations: number[] = [0, 0, 0, 0, 0, 0];\n\t\t\tfor (let k = 0; k < this.cardActivityDailyRecords.get(j).activityChangeInfos.numberOfBlocks(); k++) {\n\t\t\t\tdurations[this.cardActivityDailyRecords.get(j).activityChangeInfos.get(k).activity] += this.cardActivityDailyRecords.get(j).activityChangeInfos.get(k).duration;\n\t\t\t}\n            table += new QString(\"<tr><td>%1</td><td>%2</td><td>%3</td><td>%4</td><td>%5</td></tr>\")\n                .arg(this.cardActivityDailyRecords.get(j).activityRecordDate.toString())\n                .arg(ActivityChangeInfo.formatClock(durations[ActivityChangeInfo.DRIVING]))\n                .arg(ActivityChangeInfo.formatClock(durations[ActivityChangeInfo.WORK]))\n                .arg(ActivityChangeInfo.formatClock(durations[ActivityChangeInfo.REST] + durations[ActivityChangeInfo.SHORTREST]))\n                .arg(ActivityChangeInfo.formatClock(durations[ActivityChangeInfo.AVAILABLE]));\n\n            durations.forEach((d, i) => {\n                durationsMonth[i] += d;\n            });\n\t\t}\n        table += new QString(\"<tr><th>Summary</th><th>%1</th><th>%2</th><th>%3</th><th>%4</th></tr>\")\n            .arg(ActivityChangeInfo.formatClock(durationsMonth[ActivityChangeInfo.DRIVING]))\n            .arg(ActivityChangeInfo.formatClock(durationsMonth[ActivityChangeInfo.WORK]))\n            .arg(ActivityChangeInfo.formatClock(durationsMonth[ActivityChangeInfo.REST] + durationsMonth[ActivityChangeInfo.SHORTREST]))\n            .arg(ActivityChangeInfo.formatClock(durationsMonth[ActivityChangeInfo.AVAILABLE]));\n\n\t\ttable += \"</table></li></ul>\";\n\t\treport.tagValuePair(tr(\"Timesheet\"), table);\n    }\n}\n\n","\nimport * as padStart from 'lodash/padStart';\nimport DataType from 'DataTypes/DataType';\nimport QString from 'utils/QString';\nimport {tr} from 'utils/Translation';\nimport Reporter from 'Reporter/Reporter';\n\n\nexport default class ActivityChangeInfo extends DataType {\n\n    s: number;\n    c: number;\n    p: number;\n    a: number;\n    t: number;\n    \n    duration: number;\n\tactivity: number;\n    isSlotState: boolean;\n    \n\tstatic REST = 0;\n\tstatic AVAILABLE = 1;\n\tstatic WORK = 2;\n\tstatic DRIVING = 3;\n\tstatic UNKNOWN = 4;\n    static SHORTREST = 5;\n    \n    static staticSize: number = 2;\n\n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        let start = new Uint8Array(data);\n\n        this.s = (start[0] & (1 << 7)) >> 7;\n        this.c = (start[0] & (1 << 6)) >> 6;\n        this.p = (start[0] & (1 << 5)) >> 5;\n        this.a = (start[0] & ((1 << 4) | (1 << 3))) >> 3;\n        this.t = Number((start[0] & 7) << 8) + start[1];\n\n        this.duration = 0;\n        this.activity = this.a;\n    }\n\n    setDuration(newDuration: number, newIsSlotState: boolean) {\n        this.duration = newDuration;\n        this.isSlotState = newIsSlotState;\n        if (this.a == 0 && this.duration < 15) {\n            this.activity = ActivityChangeInfo.SHORTREST;\n        }\n        if (!this.isSlotState && (this.p != 0) && (this.c == 0)) {\n            this.activity = ActivityChangeInfo.UNKNOWN;\n        }\n    }\n\n    heightHint() {\n        switch (this.activity) {\n            case ActivityChangeInfo.REST: return 0.3;\n            case ActivityChangeInfo.AVAILABLE: return 0.15;\n            case ActivityChangeInfo.WORK: return 0.7;\n            case ActivityChangeInfo.DRIVING: return 1.0;\n            case ActivityChangeInfo.UNKNOWN: return 0.2;\n            case ActivityChangeInfo.SHORTREST: return 0.4;\n        }\n        return 0.5;\n    }\n\n    className() {\n        return \"ActivityChangeInfo\";\n    }\n\n    size() {\n        return 2;\n    }\n    \n    isDefaultValue() {\n        return false;\n    }\n    \n    activityName() {\n        switch (this.activity) {\n            case ActivityChangeInfo.REST: {\n                return tr(\"break/rest\");\n            }\n            case ActivityChangeInfo.AVAILABLE: {\n                return tr(\"availability\");\n            }\n            case ActivityChangeInfo.WORK: {\n                return tr(\"work\");\n            }\n            case ActivityChangeInfo.DRIVING: {\n                return tr(\"driving\");\n            }\n            case ActivityChangeInfo.UNKNOWN: {\n                return tr(\"unknown\");\n            }\n            case ActivityChangeInfo.SHORTREST: {\n                return tr(\"short break\");\n            }\n        }\n        return tr(\"unknown activity\");\n    }\n\n    color() {\n        switch (this.activity) {\n            case ActivityChangeInfo.REST: return \"red\";\n            case ActivityChangeInfo.AVAILABLE: return \"black\";\n            case ActivityChangeInfo.WORK: return \"yellow\";\n            case ActivityChangeInfo.DRIVING: return \"green\";\n            case ActivityChangeInfo.UNKNOWN: return \"purple\";\n            case ActivityChangeInfo.SHORTREST: return \"orange\";\n        }\n        return \"blue\";\n    }\n\n    static formatClock(time: number) {\n        return new QString(\"%1:%2\")\n                .arg(padStart(Math.floor(time / 60), 2, '0'))\n                .arg(padStart(time % 60, 2, '0')).toString();\n    }\n\n    timespan() {\n        return new QString(tr(\"from %1 to %2 (%3 h)\"))\n            .arg(ActivityChangeInfo.formatClock(this.t))\n            .arg(ActivityChangeInfo.formatClock(this.t + this.duration))\n            .arg(ActivityChangeInfo.formatClock(this.duration))\n            .toString();\n    }\n\n    extraString() {\n        let rv = '';\n        if (this.isSlotState) {\n            rv += (this.p == 0 ? tr(\"Card inserted\") : tr(\"Card not inserted or withdrawn\")) + \", \";\n            rv += (this.s == 0 ? tr(\"driver slot\") : tr(\"co-driver slot\")) + \", \";\n            rv += (this.c == 0 ? tr(\"single\") : tr(\"crew\"));\n        } else {\n            if (this.p == 0) {\n                rv += tr(\"Card inserted\") + \", \";\n                rv += (this.s == 0 ? tr(\"driver slot\") : tr(\"co-driver slot\")) + \", \";\n                rv += (this.c == 0 ? tr(\"single\") : tr(\"crew\"));\n            } else {\n                rv += tr(\"Card not inserted or withdrawn\") + \", \";\n                rv += (this.s == 0 ? tr(\"driver slot\") : tr(\"co-driver slot\")) + \", \";\n                rv += (this.c == 0 ? tr(\"following activity unknown\") : tr(\"following activity manually entered\"));\n            }\n        }\n        return rv;\n    }\n\n    title() {\n        return new QString(tr(\"%1 for %2 h\"))\n            .arg(this.activityName())\n            .arg(ActivityChangeInfo.formatClock(this.duration)).toString(); \n    }\n\n    printOn(report: Reporter) {\n        report.tagValuePair(tr(\"activity\"), this.activityName());\n        report.tagValuePair(tr(\"activityCode\"), this.activity);\n        report.tagValuePair(tr(\"time\"), this.timespan());\n        report.tagValuePair(tr(\"from\"), ActivityChangeInfo.formatClock(this.t));\n        report.tagValuePair(tr(\"duration\"), ActivityChangeInfo.formatClock(this.duration));\n        report.tagValuePair(tr(\"slot status\"), this.extraString());\n        report.tagValuePair(tr(\"Raw data\"), new QString(\"s=%1, c=%2, p=%3, a=%4, t=%5\")\n            .arg(this.s)\n            .arg(this.c)\n            .arg(this.p)\n            .arg(this.a)\n            .arg(this.t).toString());\n    }\n}","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport Timespan from 'DataTypes/Timespan';\nimport VehicleRegistration from 'DataTypes/VehicleRegistration';\n\n\nexport default class CardEventRecord extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    eventType: number;\n    eventTime: Timespan;\n    eventVehicleRegistration: VehicleRegistration;\n    static staticSize: number = 24;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.eventType = DataReader.readUint8(data, 0);\n        this.eventTime = new Timespan(data.slice(1));\n        this.eventVehicleRegistration = new VehicleRegistration(data.slice(9));    \n    }\n\n    className() {\n        return \"CardEventRecord\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 24;\n    }\n\n    toString() {\n\t\tlet qs = new QString('CardEventRecord');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"eventType\"), FormatStrings.eventType(this.eventType));\n        report.tagValuePair(tr(\"eventTime\"), this.eventTime.toString());\n        report.writeBlock(this.eventVehicleRegistration, tr(\"eventVehicleRegistration\"));\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport RawData from 'DataTypes/RawData';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport DataType from 'DataTypes/DataType';\nimport FormatStrings from 'utils/FormatStrings';\nimport Reporter from 'Reporter/Reporter';\nimport {tr} from 'utils/Translation';\n\nimport Timespan from 'DataTypes/Timespan';\nimport VehicleRegistration from 'DataTypes/VehicleRegistration';\nimport FullCardNumber from 'DataTypes/FullCardNumber';\nimport VuControlActivityRecord from 'DataTypes/VuControlActivityRecord';\nimport VuCompanyLocksRecord from 'DataTypes/VuCompanyLocksRecord';\nimport TimeReal from 'DataTypes/TimeReal';\nimport EncryptedCertificate from 'DataTypes/EncryptedCertificate';\n\n\nexport default class VuOverview extends VuBlock {\n\n    static BLOCK_TYPE = 0x1;\n    \n\n    memberStateCertificate: EncryptedCertificate;\n    vuCertificate: EncryptedCertificate;\n    vehicleIdentificationNumber: string;\n    vehicleRegistrationIdentification: VehicleRegistration;\n    currentDateTime: TimeReal;\n    vuDownloadablePeriod: Timespan;\n    CardSlotsStatus: number;\n    downloadingTime: TimeReal;\n    cardNumber: FullCardNumber;\n    companyOrWorkshopName: string;\n    vuCompanyLocksRecord: VuCompanyLocksRecord[];\n    vuControlActivityRecord: VuControlActivityRecord[];\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n\n        this.memberStateCertificate = new EncryptedCertificate(data.slice(0))\n        this.vuCertificate = new EncryptedCertificate(data.slice(194))\n        this.vehicleIdentificationNumber = DataReader.readString(data, 388, 17).toString();\n        this.vehicleRegistrationIdentification = new VehicleRegistration(data.slice(405))\n        this.currentDateTime = new TimeReal(data.slice(420))\n        this.vuDownloadablePeriod = new Timespan(data.slice(424))\n        this.CardSlotsStatus = DataReader.readUint8(data, 432);\n        this.downloadingTime = new TimeReal(data.slice(433))\n        this.cardNumber = new FullCardNumber(data.slice(437))\n        this.companyOrWorkshopName = DataReader.readCodePageString(data, 455, 36).toString();    \n    }\n\n    className() {\n        return \"VuOverview\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    \n    size() {\n        return 620;\n    }\n\n\n    toString() {\n\t\tlet qs = new QString('VuOverview');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.writeBlock(this.memberStateCertificate, tr(\"memberStateCertificate\"));\n        report.writeBlock(this.vuCertificate, tr(\"vuCertificate\"));\n        report.tagValuePair(tr(\"vehicleIdentificationNumber\"), this.vehicleIdentificationNumber);\n        report.writeBlock(this.vehicleRegistrationIdentification, tr(\"vehicleRegistrationIdentification\"));\n        report.writeBlock(this.currentDateTime, tr(\"currentDateTime\"));\n        report.writeBlock(this.vuDownloadablePeriod, tr(\"vuDownloadablePeriod\"));\n        report.tagValuePair(tr(\"CardSlotsStatus\"), this.CardSlotsStatus);\n        report.writeBlock(this.downloadingTime, tr(\"downloadingTime\"));\n        report.writeBlock(this.cardNumber, tr(\"cardNumber\"));\n        report.tagValuePair(tr(\"companyOrWorkshopName\"), this.companyOrWorkshopName);\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport Timespan from 'DataTypes/Timespan';\nimport FullCardNumber from 'DataTypes/FullCardNumber';\n\n\nexport default class Block11Record extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    cardNumber: FullCardNumber;\n    time: Timespan;\n    sometimesDuration: number;\n    payloadData: RawData;\n    static staticSize: number = 58;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.cardNumber = new FullCardNumber(data.slice(0));\n        this.time = new Timespan(data.slice(18));\n        this.sometimesDuration = DataReader.readUint16(data, 26);\n        this.payloadData = DataReader.readRawData(data, 28, 30);    \n    }\n\n    className() {\n        return \"Block11Record\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 58;\n    }\n\n    toString() {\n\t\tlet qs = new QString('Block11Record');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.writeBlock(this.cardNumber, tr(\"cardNumber\"));\n        report.tagValuePair(tr(\"time\"), this.time.toString());\n        report.tagValuePair(tr(\"sometimesDuration\"), new QString(\"%1 s\").arg(this.sometimesDuration).toString());\n        report.tagValuePair(tr(\"payloadData\"), this.payloadData.toString());\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport RawData from 'DataTypes/RawData';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport DataType from 'DataTypes/DataType';\nimport FormatStrings from 'utils/FormatStrings';\nimport Reporter from 'Reporter/Reporter';\nimport {tr} from 'utils/Translation';\n\nimport FullCardNumber from 'DataTypes/FullCardNumber';\n\n\nexport default class CardSlots extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    cardNumberDriverSlotBegin: FullCardNumber;\n    cardNumberCoDriverSlotBegin: FullCardNumber;\n    cardNumberDriverSlotEnd: FullCardNumber;\n    cardNumberCoDriverSlotEnd: FullCardNumber;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n\n        this.cardNumberDriverSlotBegin = new FullCardNumber(data.slice(0))\n        this.cardNumberCoDriverSlotBegin = new FullCardNumber(data.slice(18))\n        this.cardNumberDriverSlotEnd = new FullCardNumber(data.slice(36))\n        this.cardNumberCoDriverSlotEnd = new FullCardNumber(data.slice(54))    \n    }\n\n    className() {\n        return \"CardSlots\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    \n    size() {\n        return 72;\n    }\n\n\n    toString() {\n\t\tlet qs = new QString('CardSlots');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.writeBlock(this.cardNumberDriverSlotBegin, tr(\"cardNumberDriverSlotBegin\"));\n        report.writeBlock(this.cardNumberCoDriverSlotBegin, tr(\"cardNumberCoDriverSlotBegin\"));\n        report.writeBlock(this.cardNumberDriverSlotEnd, tr(\"cardNumberDriverSlotEnd\"));\n        report.writeBlock(this.cardNumberCoDriverSlotEnd, tr(\"cardNumberCoDriverSlotEnd\"));\n    }\n}\n\n","\nimport * as isEmpty from 'lodash/isEmpty';\n\nimport Block from 'DataTypes/Block';\nimport DataType from 'DataTypes/DataType';\nimport Subblocks from 'DataTypes/Subblocks';\nimport QString from 'utils/QString';\n\n\nexport default class Reporter {\n\n    protected title: string;\n    protected nestLevel: number;\n    protected collected: string;\n    \n    constructor() {\n        this.nestLevel = 0;\n        this.collected = '';\n    }\n\n    setTitle(newTitle: string) {\n        this.title = newTitle;\n    }\n\n    allowSvg() {\n        return false;\n    }\n\n    tagValuePair(tag: string|QString, value: string|number) {\n    }\n\n    writeArray<T extends DataType>(ray: Subblocks<T>, title: string = '', defaultShown: boolean = true) {        \n        this.arrayStart(ray.numberOfBlocks(), title, defaultShown);\n        this.nestLevel += 1;\n        for (let j = 0; j < ray.numberOfBlocks(); j++) {\n            this.writeBlock(ray.get(j));\n        }\n        this.nestLevel -= 1;\n        this.arrayEnd(ray.numberOfBlocks());\n    }\n\n    writeBlock(value: Block, tag: string|QString = '') {\n        this.nestLevel += 1;\n        tag = tag.toString();\n        if (isEmpty(tag) && !isEmpty(value.title())) {\n            this.subBlock(value, value.title());\n        } else {\n            this.subBlock(value, tag);\n        }\n        this.nestLevel -= 1;\n    }\n\n    subBlock(value: Block, tag: string) {\n\n    }\n\n    arrayStart(count: number, title: string, defaultShown: boolean) {\n    }\n\n    arrayEnd(count: number) {\n    }\n}\n","\nlet fileDownload = require('js-file-download'); // use require() because it fails with import\n\nimport EsmFile from 'EsmFile';\nimport JsonReporter from 'Reporter/JsonReporter';\nimport HtmlReporter from 'Reporter/HtmlReporter';\n\n\nexport function downloadEsmAsJson(filename: string) {\n    console.log(\"downloadEsmAsJson: \" + filename);\n\n    readEsmData(filename).then((data: ArrayBuffer) => {\n        let j = convertToJson(data);\n        let jsonData = JSON.stringify(j, null, 4);\n        saveFile(jsonData, filename + '.json', 'application/json');\n    });\n}\n\nexport function downloadEsmAsHtml(filename: string) {\n    console.log(\"downloadEsmAsHtml: \" + filename);\n\n    readEsmData(filename).then((data: ArrayBuffer) => {                \n        let html = convertToHtml(data);\n        saveFile(html, filename + '.html', 'text/html');    \n    });\n}\n\nexport function convertToJson(data: ArrayBuffer): any {        \n    let ef = EsmFile.parseData(data);\n    let report = new JsonReporter();\n    ef.printOn(report);\n    report.renderReport();\n    return report.jsonCollected as any;\n}\n\nexport function convertToHtml(data: ArrayBuffer): string {        \n    let ef = EsmFile.parseData(data);\n    let report = new HtmlReporter();\n    ef.printOn(report);\n    return report.renderReport();\n}\n\nexport function saveFile(data, filename, mime) {\n    fileDownload(data, filename.replace(/^.*\\//, ''), mime); \n}\n\nexport function readEsmData(filename: string) {\n    return new Promise((resolve, reject) => {\n        let xhr = new XMLHttpRequest();\n    \n        xhr.open(\"GET\", filename);\n        xhr.responseType = \"arraybuffer\";\n\n        xhr.onload = () => {\n            if (xhr.status === 200) {\n                resolve(xhr.response);\n            } else {\n                reject(Error(`Failed to GET filename ${filename} HTTP ${xhr.status} - ${xhr.statusText}`));\n            }\n        };\n\n        xhr.onerror = () => {\n            let msg = `Connection Error while GET filename ${filename}`;\n            console.error(msg);\n            reject(Error(msg));\n        };\n        \n        xhr.send();\n    });\n    \n}\n","module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 0)\n    }\n}\n","\nimport * as fs from 'fs';\n\nimport Block from 'DataTypes/Block';\nimport {blockFactory} from \"VuBlocks/blockFactory\";\nimport TopLevelBlock from 'DataTypes/TopLevelBlock';\nimport Reporter from 'Reporter/Reporter';\nimport Converter from 'utils/Converter';\nimport Identification from 'CardBlocks/Identification';\nimport CardDriverActivity from 'CardBlocks/CardDriverActivity';\nimport VuOverview from 'VuBlocks/VuOverview';\nimport QString from 'utils/QString';\nimport {tr} from 'utils/Translation';\nimport BlockParseError from 'DataTypes/BlockParseError';\n\n\nexport default class EsmFile {\n\n    fileData: ArrayBuffer;\n    blocks: Block[];\n\n    constructor(data: ArrayBuffer) {\n        this.fileData = data;\n        this.blocks = [];\n    }\n\n    static parseData(data: ArrayBuffer): EsmFile {\n        let block: TopLevelBlock;\n        let pos = 0;\n\n        let ef = new EsmFile(data);\n        let errorCounter = 0;\n\n        try {\n            while(pos < data.byteLength) {\n                block = blockFactory(data, pos);\n                pos += block.size()            \n                ef.blocks.push(block);\n\n                // console.log(\"card size: \" + block.size());\n\n                if (block instanceof BlockParseError) {\n                    errorCounter += 1\n                    if (errorCounter > 5) {\n                        throw new Error(\"Too many parse errors\");\n                    }\n                } else {\n                    errorCounter = 0;\n                }\n            }\n        } catch (err) {\n            console.error(\"Parse error: \" + err.toString());\n            console.trace();\n            ef.blocks.push(new BlockParseError(err));\n        }\n\n        return ef;\n    }\n\n    printOn(report: Reporter) {\n        report.setTitle(this.suggestTitle());\n        this.blocks.forEach((b: Block) => {\n            report.writeBlock(b);\n        })\n    }\n\n    suggestTitle(): string {\n        let rv = \"Esm data\";\n\n        let ov = EsmFile.findTypeInVector<VuOverview>(VuOverview, this.blocks);\n        let id = EsmFile.findTypeInVector<Identification>(Identification, this.blocks);\n        let act = EsmFile.findTypeInVector<CardDriverActivity>(CardDriverActivity, this.blocks);\n\n        let dateSuggestion: string;\n\n        if (ov) {\n            rv = ov.vehicleRegistrationIdentification.vehicleRegistrationNumber;\n            dateSuggestion = ov.currentDateTime.toString();\n        }\n\n        if (id) {\n            rv = id.cardHolderName.toString();\n        }\n\n        if (act) {\n            if (act.cardActivityDailyRecords.numberOfBlocks() > 1) {\n                dateSuggestion = new QString(tr(\"%1 to %2\"))\n                    .arg(act.cardActivityDailyRecords.get(0).activityRecordDate.toString())\n                    .arg(act.cardActivityDailyRecords.get(act.cardActivityDailyRecords.numberOfBlocks() - 1).activityRecordDate.toString())\n                    .toString();\n            }\n        }\n\n        if (dateSuggestion) {\n            rv += \" \" + dateSuggestion;\n        }\n\n        return rv\n    }\n\n    static findTypeInVector<T>(blockType: typeof Block, blocks: Block[]): T {\n        let rv: T;\n        blocks.forEach((it) => {\n            if (it instanceof blockType) {\n                rv = it as any;\n            }\n        });\n        return rv;\n    }\n}\n\n\n\n\n\n","\nimport TopLevelBlock from 'DataTypes/TopLevelBlock';\nimport {cardBlockFactory} from 'CardBlocks/cardBlockFactory';\nimport {vuBlockFactory} from 'VuBlocks/vuBlockFactory';\n\n\nexport function blockFactory(data, pos): TopLevelBlock {\n    if (data[pos] == 0x76) {\n        return vuBlockFactory(data, pos);\n    } else {\n        return cardBlockFactory(data, pos);\n    }\n}\n\n","\nimport DataReader from 'utils/DataReader';    \nimport CardBlock from 'CardBlocks/CardBlock';\nimport Converter from 'utils/Converter';\nimport FormatStrings from 'utils/FormatStrings';\n\nimport DriverCardApplicationIdentification from 'CardBlocks/DriverCardApplicationIdentification';\nimport LastCardDownload from 'CardBlocks/LastCardDownload';\nimport CardDrivingLicenseInformation from 'CardBlocks/CardDrivingLicenseInformation';\nimport Identification from 'CardBlocks/Identification';\nimport CardCurrentUse from 'CardBlocks/CardCurrentUse';\nimport CardChipIdentification from 'CardBlocks/CardChipIdentification';\nimport CardIccIdentification from 'CardBlocks/CardIccIdentification';\nimport CardControlActivityDataRecord from 'CardBlocks/CardControlActivityDataRecord';\nimport CardDriverActivity from 'CardBlocks/CardDriverActivity';\nimport CardEventData from 'CardBlocks/CardEventData';\nimport CardFaultData from 'CardBlocks/CardFaultData';\nimport SpecificConditions from 'CardBlocks/SpecificConditions';\nimport MemberStateCertificate from 'CardBlocks/MemberStateCertificate';\nimport CardCertificate from 'CardBlocks/CardCertificate';\nimport CardPlaceDailyWorkPeriod from 'CardBlocks/CardPlaceDailyWorkPeriod';\nimport CardVehiclesUsed from 'CardBlocks/CardVehiclesUsed';\nimport BlockParseError from 'DataTypes/BlockParseError';\n\n\nexport function cardBlockFactory(data: ArrayBuffer, pos: number) {\n    let blockType = DataReader.readUint16(data, pos);\n    //console.log(\"cardBlockFactory: \" + Converter.dec2hexString(blockType));\n            \n    data = data.slice(pos);\n\n    if (data.byteLength < 5) {\n        return new CardBlock(data);\n    }\n\n    switch (blockType) {\n\t\tcase DriverCardApplicationIdentification.BLOCK_TYPE: {\n            let rv =  new DriverCardApplicationIdentification(data);\n            console.log(`Parsed DriverCardApplicationIdentification.typeOfTachographCardId: '${FormatStrings.equipmentType(rv.typeOfTachographCardId)}'`);\n            return rv;\n        }\n\t\tcase LastCardDownload.BLOCK_TYPE: {\n            return new LastCardDownload(data);\n        }\n\t\tcase CardDrivingLicenseInformation.BLOCK_TYPE: {\n            return new CardDrivingLicenseInformation(data);\n        }\n\t\tcase Identification.BLOCK_TYPE: {\n            return new Identification(data);\n        }\n\t\tcase CardCurrentUse.BLOCK_TYPE: {\n            return new CardCurrentUse(data);\n        }\n\t\tcase CardChipIdentification.BLOCK_TYPE: {\n            return new CardChipIdentification(data);\n        }\n\t\tcase CardIccIdentification.BLOCK_TYPE: {\n            return new CardIccIdentification(data);\n        }\n\t\tcase CardControlActivityDataRecord.BLOCK_TYPE: {\n            return new CardControlActivityDataRecord(data);\n        }\n\t\tcase CardDriverActivity.BLOCK_TYPE: {\n            return new CardDriverActivity(data);\n        }\n\t\tcase CardEventData.BLOCK_TYPE: {\n            return new CardEventData(data);\n        }\n\t\tcase CardFaultData.BLOCK_TYPE: {\n            return new CardFaultData(data);\n        }\n\t\tcase SpecificConditions.BLOCK_TYPE: {\n            return new SpecificConditions(data);\n        }\n\t\tcase MemberStateCertificate.BLOCK_TYPE: {\n            return new MemberStateCertificate(data);\n        }\n\t\tcase CardCertificate.BLOCK_TYPE: {\n            return new CardCertificate(data);\n        }\n\t\tcase CardPlaceDailyWorkPeriod.BLOCK_TYPE: {\n            return new CardPlaceDailyWorkPeriod(data);\n        }\n        case CardVehiclesUsed.BLOCK_TYPE: {\n            return new CardVehiclesUsed(data);\n        }        \n        default: {\n            console.warn(\"Unknown card block type: \" + Converter.dec2hexString(blockType));\n            return new BlockParseError(\"Unknown card block type: \" + Converter.dec2hexString(blockType));\n        }\n    }\n}\n","import * as findIndex from 'lodash/findIndex';\nimport { tr } from 'utils/Translation';\nimport Block from 'DataTypes/Block';\nimport Reporter from 'Reporter/Reporter';\n\n\nexport default class RawData extends Block {\n\n    data: ArrayBuffer;\n\n    constructor(data: ArrayBuffer, length: number) {\n        super();\n        this.data = data.slice(0, length);\n    }\n\n    toString() {\n        return RawData.toHexString(new Uint8Array(this.data));\n    }\n\n    static toHexString(data: Uint8Array): string {\n        let allzeros = findIndex(data, (c) => {return c !== 0;}) < 0;\n        if (allzeros) {\n            return tr(`All ${data.byteLength} Bytes are zeroed.`);\n        }\n\n        let rv = '';\n        data.forEach((c) => {\n            rv += ('0' + c.toString(16)).slice(-2) + ' ';\n        });\n        return rv.replace(/ *$/, '');\n    }\n\n    toTextString() {\n        return String.fromCharCode.apply(null, new Uint8Array(this.data));\n    }\n\n    toUint8Array() {\n        return new Uint8Array(this.data);\n    }\n\n    printOn(report: Reporter) {\n        report.tagValuePair(\"Raw data(hex encoded)\", this.toString());\n    }\n\n    className() {\n        return \"RawData\";\n    }\n\n    size() {\n        return this.data.byteLength;\n    }\n}\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","\nimport DataType from 'DataTypes/DataType';\nimport Reporter from 'Reporter/Reporter';\n\n\nexport default class Subblocks<T extends DataType> extends DataType {\n\n    protected items: T[];\n    protected numberOfBytes: number;\n\n    constructor() {\n        super();\n\n        this.numberOfBytes = 0;\n        this.items = [];\n    }\n\n\tappend(block: T) {\n        if (!block.isDefaultValue()) {\n            this.items.push(block);\n        }\n        this.numberOfBytes += block.size();\n        //console.log(\"this.numberOfBytes: \" + this.numberOfBytes);\n    }\n\n    get(i: number): T {\n        return this.items[i];\n    }\n\n    numberOfBlocks() {\n        return this.items.length;\n    }\n\n    size() {\n        return this.numberOfBytes;\n    }\n\n    printOn(o: Reporter) {\n        o.writeArray(this, this.title())\n    }\n\n    className() {\n        return `Subblocks<${this.constructor.name}>`;\n    }\n}\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\n\n\nexport default class DriverCardApplicationIdentification extends CardBlock {\n\n    static BLOCK_TYPE = 0x0501;\n    \n\n    typeOfTachographCardId: number;\n    cardStructureVersion: RawData;\n    noOfEventsPerType: number;\n    noOfFaultsPerType: number;\n    activityStructureLength: number;\n    noOfCardVehicleRecords: number;\n    noOfCardPlaceRecords: number;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.typeOfTachographCardId = DataReader.readUint8(data, 5);\n        this.cardStructureVersion = DataReader.readRawData(data, 6, 2);\n        this.noOfEventsPerType = DataReader.readUint8(data, 8);\n        this.noOfFaultsPerType = DataReader.readUint8(data, 9);\n        this.activityStructureLength = DataReader.readUint16(data, 10);\n        this.noOfCardVehicleRecords = DataReader.readUint16(data, 12);\n        this.noOfCardPlaceRecords = DataReader.readUint8(data, 14);    \n    }\n\n    className() {\n        return \"DriverCardApplicationIdentification\";\n    }\n\n    title() {\n        return \"Application Identification\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('DriverCardApplicationIdentification');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"typeOfTachographCardId\"), FormatStrings.equipmentType(this.typeOfTachographCardId));\n        report.tagValuePair(tr(\"cardStructureVersion\"), this.cardStructureVersion.toString());\n        report.tagValuePair(tr(\"noOfEventsPerType\"), this.noOfEventsPerType);\n        report.tagValuePair(tr(\"noOfFaultsPerType\"), this.noOfFaultsPerType);\n        report.tagValuePair(tr(\"activityStructureLength\"), new QString(\"%1 Bytes\").arg(this.activityStructureLength).toString());\n        report.tagValuePair(tr(\"noOfCardVehicleRecords\"), this.noOfCardVehicleRecords);\n        report.tagValuePair(tr(\"noOfCardPlaceRecords\"), this.noOfCardPlaceRecords);\n        if (this.dataBlockSize() != 15 ) {\n            report.tagValuePair(\"should have\", 15 );\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport TimeReal from 'DataTypes/TimeReal';\n\n\nexport default class LastCardDownload extends CardBlock {\n\n    static BLOCK_TYPE = 0x050e;\n    \n\n    lastCardDownload: TimeReal;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.lastCardDownload = new TimeReal(data.slice(5));    \n    }\n\n    className() {\n        return \"LastCardDownload\";\n    }\n\n    title() {\n        return \"Card Download\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('LastCardDownload');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"lastCardDownload\"), this.lastCardDownload.toString());\n        if (this.dataBlockSize() != 9 ) {\n            report.tagValuePair(\"should have\", 9 );\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\n\n\nexport default class CardDrivingLicenseInformation extends CardBlock {\n\n    static BLOCK_TYPE = 0x0521;\n    \n\n    drivingLicenseIssuingAuthorithy: string;\n    drivingLicenseIssuingNation: number;\n    drivingLicenseNumber: string;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.drivingLicenseIssuingAuthorithy = DataReader.readCodePageString(data, 5, 36).toString();\n        this.drivingLicenseIssuingNation = DataReader.readUint8(data, 41);\n        this.drivingLicenseNumber = DataReader.readString(data, 42, 16).toString();    \n    }\n\n    className() {\n        return \"CardDrivingLicenseInformation\";\n    }\n\n    title() {\n        return \"Driving License Info\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('CardDrivingLicenseInformation');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"drivingLicenseIssuingAuthorithy\"), this.drivingLicenseIssuingAuthorithy);\n        report.tagValuePair(tr(\"drivingLicenseIssuingNation\"), FormatStrings.nationNumeric(this.drivingLicenseIssuingNation));\n        report.tagValuePair(tr(\"drivingLicenseNumber\"), this.drivingLicenseNumber);\n        if (this.dataBlockSize() != 58 ) {\n            report.tagValuePair(\"should have\", 58 );\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\n\n\nexport default class Name extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    surname: string;\n    firstNames: string;\n    static staticSize: number = 72;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.surname = DataReader.readCodePageString(data, 0, 36).toString();\n        this.firstNames = DataReader.readCodePageString(data, 36, 36).toString();    \n    }\n\n    className() {\n        return \"Name\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 72;\n    }\n\n    toString() {\n\t\tlet qs = this.surname + \", \" + this.firstNames;\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"surname\"), this.surname);\n        report.tagValuePair(tr(\"firstNames\"), this.firstNames);\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\n\n\nexport default class BcdDate extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    encodedDate: RawData;\n    static staticSize: number = 4;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.encodedDate = DataReader.readRawData(data, 0, 4);    \n    }\n\n    className() {\n        return \"BcdDate\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 4;\n    }\n\n    toString() {\n\t\tlet qs = '';\n\t\tlet d = this.encodedDate.toUint8Array();\n\t\tqs = '' + Converter.bcdbyte(d[0]) + Converter.bcdbyte(d[1]) + '-' + padStart(Converter.bcdbyte(d[2]), 2, '0') + '-' + padStart(Converter.bcdbyte(d[3]), 2, '0');;\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"encodedDate\"), this.encodedDate.toString());\n    }\n}\n\n","var baseRepeat = require('./_baseRepeat'),\n    baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringSize = require('./_stringSize'),\n    stringToArray = require('./_stringToArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\n\n/**\n * Creates the padding for `string` based on `length`. The `chars` string\n * is truncated if the number of characters exceeds `length`.\n *\n * @private\n * @param {number} length The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padding for `string`.\n */\nfunction createPadding(length, chars) {\n  chars = chars === undefined ? ' ' : baseToString(chars);\n\n  var charsLength = chars.length;\n  if (charsLength < 2) {\n    return charsLength ? baseRepeat(chars, length) : chars;\n  }\n  var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n  return hasUnicode(chars)\n    ? castSlice(stringToArray(result), 0, length).join('')\n    : result.slice(0, length);\n}\n\nmodule.exports = createPadding;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor;\n\n/**\n * The base implementation of `_.repeat` which doesn't coerce arguments.\n *\n * @private\n * @param {string} string The string to repeat.\n * @param {number} n The number of times to repeat the string.\n * @returns {string} Returns the repeated string.\n */\nfunction baseRepeat(string, n) {\n  var result = '';\n  if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n    return result;\n  }\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n  do {\n    if (n % 2) {\n      result += string;\n    }\n    n = nativeFloor(n / 2);\n    if (n) {\n      string += string;\n    }\n  } while (n);\n\n  return result;\n}\n\nmodule.exports = baseRepeat;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nmodule.exports = asciiSize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nmodule.exports = unicodeSize;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport TimeReal from 'DataTypes/TimeReal';\nimport VehicleRegistration from 'DataTypes/VehicleRegistration';\n\n\nexport default class CardCurrentUse extends CardBlock {\n\n    static BLOCK_TYPE = 0x0507;\n    \n\n    sessionOpenTime: TimeReal;\n    sessionOpenVehicle: VehicleRegistration;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.sessionOpenTime = new TimeReal(data.slice(5));\n        this.sessionOpenVehicle = new VehicleRegistration(data.slice(9));    \n    }\n\n    className() {\n        return \"CardCurrentUse\";\n    }\n\n    title() {\n        return \"Current Usage\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('CardCurrentUse');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"sessionOpenTime\"), this.sessionOpenTime.toString());\n        report.writeBlock(this.sessionOpenVehicle, tr(\"sessionOpenVehicle\"));\n        if (this.dataBlockSize() != 24 ) {\n            report.tagValuePair(\"should have\", 24 );\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\n\n\nexport default class CardChipIdentification extends CardBlock {\n\n    static BLOCK_TYPE = 0x0005;\n    \n\n    icSerialNumber: RawData;\n    icManufacturingReference: RawData;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.icSerialNumber = DataReader.readRawData(data, 5, 4);\n        this.icManufacturingReference = DataReader.readRawData(data, 9, 4);    \n    }\n\n    className() {\n        return \"CardChipIdentification\";\n    }\n\n    title() {\n        return \"Card chip identification\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('CardChipIdentification');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"icSerialNumber\"), this.icSerialNumber.toString());\n        report.tagValuePair(tr(\"icManufacturingReference\"), this.icManufacturingReference.toString());\n        if (this.dataBlockSize() != 13 ) {\n            report.tagValuePair(\"should have\", 13 );\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport ExtendedSerialNumber from 'DataTypes/ExtendedSerialNumber';\n\n\nexport default class CardIccIdentification extends CardBlock {\n\n    static BLOCK_TYPE = 0x0002;\n    \n\n    clockStop: number;\n    cardExtendedSerialNumber: ExtendedSerialNumber;\n    cardApprovalNumber: RawData;\n    cardPersonaliserID: RawData;\n    embedderIcAssemblerId: RawData;\n    icIdentifier: RawData;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.clockStop = DataReader.readUint8(data, 5);\n        this.cardExtendedSerialNumber = new ExtendedSerialNumber(data.slice(6));\n        this.cardApprovalNumber = DataReader.readRawData(data, 14, 8);\n        this.cardPersonaliserID = DataReader.readRawData(data, 22, 1);\n        this.embedderIcAssemblerId = DataReader.readRawData(data, 23, 5);\n        this.icIdentifier = DataReader.readRawData(data, 28, 2);    \n    }\n\n    className() {\n        return \"CardIccIdentification\";\n    }\n\n    title() {\n        return \"Card ICC identification\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('CardIccIdentification');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"clockStop\"), this.clockStop);\n        report.writeBlock(this.cardExtendedSerialNumber, tr(\"cardExtendedSerialNumber\"));\n        report.tagValuePair(tr(\"cardApprovalNumber\"), this.cardApprovalNumber.toString());\n        report.tagValuePair(tr(\"cardPersonaliserID\"), this.cardPersonaliserID.toString());\n        report.tagValuePair(tr(\"embedderIcAssemblerId\"), this.embedderIcAssemblerId.toString());\n        report.tagValuePair(tr(\"icIdentifier\"), this.icIdentifier.toString());\n        if (this.dataBlockSize() != 30 ) {\n            report.tagValuePair(\"should have\", 30 );\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\n\n\nexport default class BcdMonthYear extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    encodedDate: RawData;\n    static staticSize: number = 2;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.encodedDate = DataReader.readRawData(data, 0, 2);    \n    }\n\n    className() {\n        return \"BcdMonthYear\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 2;\n    }\n\n    toString() {\n\t\tlet qs = '';\n\t\tlet d = this.encodedDate.toUint8Array();\n\t\tqs = \"20\" + padStart(Converter.bcdbyte(d[1]), 2, '0') + '-' + padStart(Converter.bcdbyte(d[0]), 2, '0');;\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"encodedDate\"), this.encodedDate.toString());\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport TimeReal from 'DataTypes/TimeReal';\nimport Timespan from 'DataTypes/Timespan';\nimport VehicleRegistration from 'DataTypes/VehicleRegistration';\nimport FullCardNumber from 'DataTypes/FullCardNumber';\n\n\nexport default class CardControlActivityDataRecord extends CardBlock {\n\n    static BLOCK_TYPE = 0x0508;\n    \n\n    controlType: number;\n    controlTime: TimeReal;\n    controlCardNumber: FullCardNumber;\n    controlVehicleRegistration: VehicleRegistration;\n    controlDownloadPeriod: Timespan;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.controlType = DataReader.readUint8(data, 5);\n        this.controlTime = new TimeReal(data.slice(6));\n        this.controlCardNumber = new FullCardNumber(data.slice(10));\n        this.controlVehicleRegistration = new VehicleRegistration(data.slice(28));\n        this.controlDownloadPeriod = new Timespan(data.slice(43));    \n    }\n\n    className() {\n        return \"CardControlActivityDataRecord\";\n    }\n\n    title() {\n        return \"Control Activity Data\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('CardControlActivityDataRecord');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"controlType\"), this.controlType);\n        report.tagValuePair(tr(\"controlTime\"), this.controlTime.toString());\n        report.writeBlock(this.controlCardNumber, tr(\"controlCardNumber\"));\n        report.writeBlock(this.controlVehicleRegistration, tr(\"controlVehicleRegistration\"));\n        report.tagValuePair(tr(\"controlDownloadPeriod\"), this.controlDownloadPeriod.toString());\n        if (this.dataBlockSize() != 51 ) {\n            report.tagValuePair(\"should have\", 51 );\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\n\n\nexport default class RawCardDriverActivity extends CardBlock {\n\n    static BLOCK_TYPE = 0x0504;\n    \n\n    oldestRecord: number;\n    newestRecord: number;\n    cyclicData: RawData;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.oldestRecord = DataReader.readUint16(data, 5);\n        this.newestRecord = DataReader.readUint16(data, 7);\n        this.cyclicData = DataReader.readRawData(data, 9, this.dataBlockSize() - (9));    \n    }\n\n    className() {\n        return \"RawCardDriverActivity\";\n    }\n\n    title() {\n        return \"Driver Activity Data\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('CardDriverActivity');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"oldestRecord\"), this.oldestRecord);\n        report.tagValuePair(tr(\"newestRecord\"), this.newestRecord);\n        report.tagValuePair(tr(\"cyclicData\"), this.cyclicData.toString());\n        if (this.dataBlockSize() != 9 ) {\n            report.tagValuePair(\"should have\", 9 );\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport RawData from 'DataTypes/RawData';\nimport ActivityChangeInfo from 'DataTypes/ActivityChangeInfo';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport DataType from 'DataTypes/DataType';\nimport FormatStrings from 'utils/FormatStrings';\nimport Reporter from 'Reporter/Reporter';\nimport {tr} from 'utils/Translation';\nimport SvgDayActivity from 'DataTypes/SvgDayActivity';\n\nimport TimeReal from 'DataTypes/TimeReal';\nimport RawCardActivityDailyRecord from 'DataTypes/RawCardActivityDailyRecord';\n\n\nexport default class CardActivityDailyRecord extends RawCardActivityDailyRecord {\n\n    activityChangeInfos: Subblocks<ActivityChangeInfo>;\n\n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.activityChangeInfos = DataReader.readSubblocksByLength<ActivityChangeInfo>(ActivityChangeInfo, data, \n            RawCardActivityDailyRecord.staticSize, this.activityRecordLength - RawCardActivityDailyRecord.staticSize);\n\n        if (this.activityChangeInfos.numberOfBlocks() > 0) {\n            for (let j = 0; j < this.activityChangeInfos.numberOfBlocks() - 1; j++) {\n                if (this.activityChangeInfos.get(j + 1).t != 0) {\n                    this.activityChangeInfos.get(j).setDuration(this.activityChangeInfos.get(j + 1).t - this.activityChangeInfos.get(j).t, false);\n                } else {\n                    this.activityChangeInfos.get(j).setDuration(60*24 - this.activityChangeInfos.get(j).t, false);\n                }\n            }\n            this.activityChangeInfos.get(this.activityChangeInfos.numberOfBlocks() - 1).setDuration(60 * 24 - this.activityChangeInfos.get(this.activityChangeInfos.numberOfBlocks() - 1).t, false);\n        }\n    }\n\n    className() {\n        return \"CardActivityDailyRecord\";\n    }\n\n    title() {\n        return new QString(tr(\"Activities on %1\"))\n            .arg(this.activityRecordDate.toString()).toString();\n    }\n\n    size() {\n        if (this.activityRecordLength < RawCardActivityDailyRecord.staticSize) {\n            console.log(\"Size too small in CardActivityDailyRecord\");\n            return RawCardActivityDailyRecord.staticSize;\n        }\n        if (this.activityRecordLength > RawCardActivityDailyRecord.staticSize + 2 * 60 * 24) {\n            console.log(\"Size of CardActivityDailyRecord excessive: \" + this.activityRecordLength);\n        }\n        return this.activityRecordLength;\n    }\n\n    printOn(report: Reporter) {\n        super.printOn(report);\n\n        if (report.allowSvg()) {\n            let visualization = new SvgDayActivity();\n\n            for (let j = 0; j < this.activityChangeInfos.numberOfBlocks(); ++j) {\n                visualization.add(this.activityChangeInfos.get(j).t, \n                    this.activityChangeInfos.get(j).duration, \n                    this.activityChangeInfos.get(j).heightHint(), \n                    this.activityChangeInfos.get(j).color(),\n                    this.activityChangeInfos.get(j).toString());\n            }\n            report.tagValuePair(tr(\"Visualization\"), visualization.toString());\n        }\n        \n        report.writeArray(this.activityChangeInfos, tr(\"activityChangeInfos\"), false);\n    }\n}\n\n","\nimport SvgDayGraph from \"DataTypes/SvgDayGraph\";\nimport {tr} from \"utils/Translation\";\nimport QString from \"utils/QString\";\n\n\nexport default class SvgDayActivity extends SvgDayGraph {\n\n    toString() {\n        return this.addSvgHull(\"\\n\\t\\t<g transform='scale(0.5,-1) translate(0,-100)'>\" \n            + this.collected + \"\\n\\t\\t</g>\" \n            + this.drawBorderAndTimeAxis() \n            + this.drawLegend(), 900);\n    }\n\n    add(from: number, duration: number, height: number, color: string, title: string) {\n        this.collected += \"\\n\\t\\t\\t<rect x='\" + from + \"' fill='\" + color + \"' width='\"\n            + duration + \"' height='\" + Math.floor(height * 80) + \"'><title>\" + title + \"</title></rect>\";\n    }\n\n    drawLegend() {\n        return new QString(\n            \"\\n\\t\\t<g style='font-size:16px;text-anchor:left'>\" +\n            \"\\n\\t\\t\\t<rect x='730' y='106' fill='purple' width='30' height='16'/><text x='765' y='120' text-anchor='start'>= %6</text>\" +\n            \"\\n\\t\\t\\t<rect x='730' y='86' fill='red' width='30' height='16'/><text x='765' y='100' text-anchor='start'>= %1</text>\" +\n            \"\\n\\t\\t\\t<rect x='730' y='66' fill='orange' width='30' height='16'/><text x='765' y='80' text-anchor='start'>= %2</text>\" +\n            \"\\n\\t\\t\\t<rect x='730' y='46' fill='yellow' width='30' height='16'/><text x='765' y='60' text-anchor='start'>= %3</text>\" +\n            \"\\n\\t\\t\\t<rect x='730' y='26' fill='green' width='30' height='16'/><text x='765' y='40' text-anchor='start'>= %4</text>\" +\n            \"\\n\\t\\t\\t<rect x='730' y='6' fill='black' width='30' height='16'/><text x='765' y='20' text-anchor='start'>= %5</text>\" +\n            \"\\n\\t\\t</g>\"\n            )\n            .arg(tr(\"break/rest\"))\n            .arg(tr(\"short break\"))\n            .arg(tr(\"working\"))\n            .arg(tr(\"driving\"))\n            .arg(tr(\"available\"))\n            .arg(tr(\"unknown\")).toString();\n    }\n}\n","\nimport QString from 'utils/QString';\nimport {tr} from 'utils/Translation';\nimport PictureGenerator from './PictureGenerator';\n\n\nexport default class SvgDayGraph extends PictureGenerator {\n\n    drawBorderAndTimeAxis() {\n        let rv = \"\";\n        rv += \"\\n\\t\\t<g style='font-size:16px;text-anchor:middle'>\";\n        for (let j = 0; j < 25; j++) {\n            rv += \"\\n\\t\\t\\t<text x='\" + (j * 30) + \"' y='118'>\" + j + \"</text>\";\n        }\n        rv += \"\\n\\t\\t\\t<text x='360' y='132'>\" + tr(\"Time of day (UTC)\") + \"</text>\";\n        rv += \"\\n\\t\\t</g>\";\n        rv += \"\\n\\t\\t<g style='stroke:black;stroke-width:2'>\";\n        for (let j = 0; j < 25; j++) {\n            rv += \"\\n\\t\\t\\t<line x1='\" + (j * 30) + \"' y1='100' x2='\" + (j * 30) + \"' y2='104'/>\";\n        }\n        rv +=\"\\n\\t\\t\\t<polyline points='0,0 720,0 720,100 0,100 0,0' style='fill:none'/>\";\n        rv +=\"\\n\\t\\t</g>\";\n        return rv;\n    }\n    \n    \n    addSvgHull(content: string, width: number) {\n        return new QString(\"\\n<div><svg xmlns='http://www.w3.org/2000/svg' width='%1' height='135'>\\n\\t<g transform='translate(10,0)'>\")\n            .arg(width).toString()\n        + content\n        + \"\\n\\t</g>\\n</svg></div>\";\n    }\n\n}","\n\nexport default class PictureGenerator {\n\n    collected: string; \n\n    constructor() {\n        this.collected = '';\n    }\n\n}","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport TimeReal from 'DataTypes/TimeReal';\n\n\nexport default class RawCardActivityDailyRecord extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    activityRecordPreviousLength: number;\n    activityRecordLength: number;\n    activityRecordDate: TimeReal;\n    activityPresenceCounter: number;\n    activityDayDistance: number;\n    static staticSize: number = 12;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.activityRecordPreviousLength = DataReader.readUint16(data, 0);\n        this.activityRecordLength = DataReader.readUint16(data, 2);\n        this.activityRecordDate = new TimeReal(data.slice(4));\n        this.activityPresenceCounter = DataReader.readBCD16(data, 8);\n        this.activityDayDistance = DataReader.readUint16(data, 10);    \n    }\n\n    className() {\n        return \"RawCardActivityDailyRecord\";\n    }\n\n    title() {\n        return new QString(tr(\"Activities on %1\")).arg(this.activityRecordDate.toString()).toString();\n    }\n\n    size() {\n        return 12;\n    }\n\n    toString() {\n\t\tlet qs = new QString('CardActivityDailyRecord');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"activityRecordPreviousLength\"), new QString(\"%1 Bytes\").arg(this.activityRecordPreviousLength).toString());\n        report.tagValuePair(tr(\"activityRecordLength\"), new QString(\"%1 Bytes\").arg(this.activityRecordLength).toString());\n        report.tagValuePair(tr(\"activityRecordDate\"), this.activityRecordDate.toString());\n        report.tagValuePair(tr(\"activityPresenceCounter\"), this.activityPresenceCounter);\n        report.tagValuePair(tr(\"activityDayDistance\"), new QString(\"%1 km\").arg(this.activityDayDistance).toString());\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport CardEventRecord from 'DataTypes/CardEventRecord';\n\n\nexport default class CardEventData extends CardBlock {\n\n    static BLOCK_TYPE = 0x0502;\n    \n\n    cardEventRecord: Subblocks<CardEventRecord>;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.cardEventRecord = DataReader.readSubblocksByLength<CardEventRecord>(CardEventRecord, data.slice(5), 0, this.dataBlockSize() - (5));    \n    }\n\n    className() {\n        return \"CardEventData\";\n    }\n\n    title() {\n        return \"Events Data\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('CardEventData');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.writeArray(this.cardEventRecord, tr(\"cardEventRecord\"));\n        if (this.dataBlockSize() != 5  + this.cardEventRecord.size()) {\n            report.tagValuePair(\"should have\", 5  + this.cardEventRecord.size());\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport CardEventRecord from 'DataTypes/CardEventRecord';\n\n\nexport default class CardFaultData extends CardBlock {\n\n    static BLOCK_TYPE = 0x0503;\n    \n\n    cardEventRecord: Subblocks<CardEventRecord>;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.cardEventRecord = DataReader.readSubblocksByLength<CardEventRecord>(CardEventRecord, data.slice(5), 0, this.dataBlockSize() - (5));    \n    }\n\n    className() {\n        return \"CardFaultData\";\n    }\n\n    title() {\n        return \"Faults Data\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('CardFaultData');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.writeArray(this.cardEventRecord, tr(\"cardEventRecord\"));\n        if (this.dataBlockSize() != 5  + this.cardEventRecord.size()) {\n            report.tagValuePair(\"should have\", 5  + this.cardEventRecord.size());\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport SpecificConditionRecord from 'DataTypes/SpecificConditionRecord';\n\n\nexport default class SpecificConditions extends CardBlock {\n\n    static BLOCK_TYPE = 0x0522;\n    \n\n    specificConditionRecord: Subblocks<SpecificConditionRecord>;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.specificConditionRecord = DataReader.readSubblocksByLength<SpecificConditionRecord>(SpecificConditionRecord, data.slice(5), 0, this.dataBlockSize() - (5));    \n    }\n\n    className() {\n        return \"SpecificConditions\";\n    }\n\n    title() {\n        return \"Specific Conditions\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('SpecificConditions');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.writeArray(this.specificConditionRecord, tr(\"specificConditionRecord\"));\n        if (this.dataBlockSize() != 5  + this.specificConditionRecord.size()) {\n            report.tagValuePair(\"should have\", 5  + this.specificConditionRecord.size());\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport TimeReal from 'DataTypes/TimeReal';\n\n\nexport default class SpecificConditionRecord extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    entryTime: TimeReal;\n    specificConditionType: number;\n    static staticSize: number = 5;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.entryTime = new TimeReal(data.slice(0));\n        this.specificConditionType = DataReader.readUint8(data, 4);    \n    }\n\n    className() {\n        return \"SpecificConditionRecord\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 5;\n    }\n\n    toString() {\n\t\tlet qs = new QString('SpecificConditionRecord');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"entryTime\"), this.entryTime.toString());\n        report.tagValuePair(tr(\"specificConditionType\"), FormatStrings.specificCondition(this.specificConditionType));\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport EncryptedCertificate from 'DataTypes/EncryptedCertificate';\n\n\nexport default class MemberStateCertificate extends CardBlock {\n\n    static BLOCK_TYPE = 0xc108;\n    \n\n    certificate: EncryptedCertificate;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.certificate = new EncryptedCertificate(data.slice(5));    \n    }\n\n    className() {\n        return \"MemberStateCertificate\";\n    }\n\n    title() {\n        return \"CA Certificate\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('MemberStateCertificate');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.writeBlock(this.certificate, tr(\"certificate\"));\n        if (this.dataBlockSize() != 199 ) {\n            report.tagValuePair(\"should have\", 199 );\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\n\n\nexport default class CertificateAuthority extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    nationNumeric: number;\n    nationAlpha: string;\n    keySerialNumber: number;\n    additionalInfo: RawData;\n    caIdentifer: number;\n    static staticSize: number = 8;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.nationNumeric = DataReader.readUint8(data, 0);\n        this.nationAlpha = DataReader.readString(data, 1, 3).toString();\n        this.keySerialNumber = DataReader.readUint8(data, 4);\n        this.additionalInfo = DataReader.readRawData(data, 5, 2);\n        this.caIdentifer = DataReader.readUint8(data, 7);    \n    }\n\n    className() {\n        return \"CertificateAuthority\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 8;\n    }\n\n    toString() {\n\t\tlet qs = new QString('CertificateAuthority');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"nationNumeric\"), FormatStrings.nationNumeric(this.nationNumeric));\n        report.tagValuePair(tr(\"nationAlpha\"), this.nationAlpha);\n        report.tagValuePair(tr(\"keySerialNumber\"), this.keySerialNumber);\n        report.tagValuePair(tr(\"additionalInfo\"), this.additionalInfo.toString());\n        report.tagValuePair(tr(\"caIdentifer\"), this.caIdentifer);\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport EncryptedCertificate from 'DataTypes/EncryptedCertificate';\n\n\nexport default class CardCertificate extends CardBlock {\n\n    static BLOCK_TYPE = 0xc100;\n    \n\n    certificate: EncryptedCertificate;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.certificate = new EncryptedCertificate(data.slice(5));    \n    }\n\n    className() {\n        return \"CardCertificate\";\n    }\n\n    title() {\n        return \"Card Certificate\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('CardCertificate');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.writeBlock(this.certificate, tr(\"certificate\"));\n        if (this.dataBlockSize() != 199 ) {\n            report.tagValuePair(\"should have\", 199 );\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport PlaceRecord from 'DataTypes/PlaceRecord';\n\n\nexport default class CardPlaceDailyWorkPeriod extends CardBlock {\n\n    static BLOCK_TYPE = 0x0506;\n    \n\n    placePointerNewestRecord: number;\n    placeRecord: Subblocks<PlaceRecord>;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.placePointerNewestRecord = DataReader.readUint8(data, 5);\n        this.placeRecord = DataReader.readSubblocksByLength<PlaceRecord>(PlaceRecord, data.slice(6), 0, this.dataBlockSize() - (6));    \n    }\n\n    className() {\n        return \"CardPlaceDailyWorkPeriod\";\n    }\n\n    title() {\n        return \"Places\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('CardPlaceDailyWorkPeriod');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"placePointerNewestRecord\"), this.placePointerNewestRecord);\n        report.writeArray(this.placeRecord, tr(\"placeRecord\"));\n        if (this.dataBlockSize() != 6  + this.placeRecord.size()) {\n            report.tagValuePair(\"should have\", 6  + this.placeRecord.size());\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport TimeReal from 'DataTypes/TimeReal';\n\n\nexport default class PlaceRecord extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    entryTime: TimeReal;\n    entryTypeDailyWorkPeriod: number;\n    dailyWorkPeriodCountry: number;\n    dailyWorkPeriodRegion: number;\n    vehicleOdometerValue: number;\n    static staticSize: number = 10;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.entryTime = new TimeReal(data.slice(0));\n        this.entryTypeDailyWorkPeriod = DataReader.readUint8(data, 4);\n        this.dailyWorkPeriodCountry = DataReader.readUint8(data, 5);\n        this.dailyWorkPeriodRegion = DataReader.readUint8(data, 6);\n        this.vehicleOdometerValue = DataReader.readUint24(data, 7);    \n    }\n\n    className() {\n        return \"PlaceRecord\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 10;\n    }\n\n    toString() {\n\t\tlet qs = new QString(\"%1%2 - %3 - %4 km\")\n\t\t\t.arg(FormatStrings.nationNumeric(this.dailyWorkPeriodCountry))\n\t\t\t.arg(this.dailyWorkPeriodRegion == 0 ? new QString() : \", \" + FormatStrings.regionNumeric(this.dailyWorkPeriodRegion))\n\t\t\t.arg(this.entryTime.toString())\n\t\t\t.arg(this.vehicleOdometerValue).toString();\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"entryTime\"), this.entryTime.toString());\n        report.tagValuePair(tr(\"entryTypeDailyWorkPeriod\"), FormatStrings.dailyWorkPeriod(this.entryTypeDailyWorkPeriod));\n        report.tagValuePair(tr(\"dailyWorkPeriodCountry\"), FormatStrings.nationNumeric(this.dailyWorkPeriodCountry));\n        report.tagValuePair(tr(\"dailyWorkPeriodRegion\"), FormatStrings.regionNumeric(this.dailyWorkPeriodRegion));\n        report.tagValuePair(tr(\"vehicleOdometerValue\"), new QString(\"%1 km\").arg(this.vehicleOdometerValue).toString());\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport CardVehicleRecord from 'DataTypes/CardVehicleRecord';\n\n\nexport default class CardVehiclesUsed extends CardBlock {\n\n    static BLOCK_TYPE = 0x0505;\n    \n\n    vehiclePointerNewestRecord: number;\n    cardVehicleRecord: Subblocks<CardVehicleRecord>;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.vehiclePointerNewestRecord = DataReader.readUint16(data, 5);\n        this.cardVehicleRecord = DataReader.readSubblocksByLength<CardVehicleRecord>(CardVehicleRecord, data.slice(7), 0, this.dataBlockSize() - (7));    \n    }\n\n    className() {\n        return \"CardVehiclesUsed\";\n    }\n\n    title() {\n        return \"Vehicles Used\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('CardVehiclesUsed');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"vehiclePointerNewestRecord\"), this.vehiclePointerNewestRecord);\n        report.writeArray(this.cardVehicleRecord, tr(\"cardVehicleRecord\"));\n        if (this.dataBlockSize() != 7  + this.cardVehicleRecord.size()) {\n            report.tagValuePair(\"should have\", 7  + this.cardVehicleRecord.size());\n            report.tagValuePair(\"has\", this.dataBlockSize());\n        }\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport Timespan from 'DataTypes/Timespan';\nimport VehicleRegistration from 'DataTypes/VehicleRegistration';\n\n\nexport default class CardVehicleRecord extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    vehicleOdometerBegin: number;\n    vehicleOdometerEnd: number;\n    vehicleUse: Timespan;\n    registration: VehicleRegistration;\n    vuDataBlockCounter: number;\n    static staticSize: number = 31;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.vehicleOdometerBegin = DataReader.readUint24(data, 0);\n        this.vehicleOdometerEnd = DataReader.readUint24(data, 3);\n        this.vehicleUse = new Timespan(data.slice(6));\n        this.registration = new VehicleRegistration(data.slice(14));\n        this.vuDataBlockCounter = DataReader.readBCD16(data, 29);    \n    }\n\n    className() {\n        return \"CardVehicleRecord\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 31;\n    }\n\n    toString() {\n\t\tlet qs = new QString(tr(\"%1 km on %2 (%3)\"))\n\t\t\t.arg(this.vehicleOdometerEnd - this.vehicleOdometerBegin)\n\t\t\t.arg(this.registration.toString())\n\t\t\t.arg(this.vehicleUse.toString()).toString();\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"vehicleOdometerBegin\"), new QString(\"%1 km\").arg(this.vehicleOdometerBegin).toString());\n        report.tagValuePair(tr(\"vehicleOdometerEnd\"), new QString(\"%1 km\").arg(this.vehicleOdometerEnd).toString());\n        report.tagValuePair(tr(\"vehicleUse\"), this.vehicleUse.toString());\n        report.writeBlock(this.registration, tr(\"registration\"));\n        report.tagValuePair(tr(\"vuDataBlockCounter\"), this.vuDataBlockCounter);\n    }\n}\n\n","\nimport DataReader from 'utils/DataReader';    \nimport VuBlock from 'VuBlocks/VuBlock';\nimport Converter from 'utils/Converter';\n\nimport VuOverview from 'VuBlocks/VuOverview';\nimport VuTechnical from 'VuBlocks/VuTechnical';\nimport VuCardData from 'VuBlocks/VuCardData';\nimport Block11 from 'VuBlocks/Block11';\nimport Block13 from 'VuBlocks/Block13';\nimport Block14 from 'VuBlocks/Block14';\nimport VuEventsFaults from 'VuBlocks/VuEventsFaults';\nimport VuActivities from 'VuBlocks/VuActivities';\nimport VuDetailedSpeedData from 'VuBlocks/VuDetailedSpeedData';\nimport BlockParseError from 'DataTypes/BlockParseError';\n\n\nexport function vuBlockFactory(data, pos) {\n    var blockType = DataReader.readUint8(data, pos + 1);\n    //console.log(\"vuBlockFactory: \" + Converter.dec2hexString(blockType));\n    data = data.slice(pos);\n\n    if (data.byteLength < 2 || data[0] != 0x76) {\n        return new VuBlock(data);\n    }\n    \n    switch (blockType) {\n        case VuOverview.BLOCK_TYPE: {\n            return new VuOverview(data);\n        }\n\t\tcase VuTechnical.BLOCK_TYPE: {\n            return new VuTechnical(data);\n        }\n\t\tcase VuCardData.BLOCK_TYPE: {\n            return new VuCardData(data);\n        }\n\t\tcase Block11.BLOCK_TYPE: {\n            return new Block11(data);\n        }\n\t\tcase Block13.BLOCK_TYPE: {\n            return new Block13(data);\n        }\n\t\tcase Block14.BLOCK_TYPE: {\n            return new Block14(data);\n        }\n\t\tcase VuEventsFaults.BLOCK_TYPE: {\n            return new VuEventsFaults(data);\n        }\n\t\tcase VuActivities.BLOCK_TYPE: {\n            return new VuActivities(data);\n        }\n        case VuDetailedSpeedData.BLOCK_TYPE: {\n            return new VuDetailedSpeedData(data);\n        }\n        default: {\n            console.log(\"Unknown vu block type: \" + Converter.dec2hexString(blockType));\n            return new BlockParseError(\"Unknown vu block type: \" + Converter.dec2hexString(blockType));\n        }\n    }\n}\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport TimeReal from 'DataTypes/TimeReal';\nimport VuCalibrationRecord from 'DataTypes/VuCalibrationRecord';\nimport ExtendedSerialNumber from 'DataTypes/ExtendedSerialNumber';\n\n\nexport default class VuTechnical extends VuBlock {\n\n    static BLOCK_TYPE = 0x5;\n    \n\n    vuManufacturerName: string;\n    vuManufacturerAddress: string;\n    vuPartNumber: string;\n    vuSerialNumber: ExtendedSerialNumber;\n    vuSoftwareVersion: string;\n    vuSoftInstallationDate: TimeReal;\n    vuManufacturingDate: TimeReal;\n    vuApprovalNumber: string;\n    sensorSerialNumber: ExtendedSerialNumber;\n    sensorApprovalNumber: string;\n    sensorPairingDateFirst: TimeReal;\n    vuCalibrationRecord: Subblocks<VuCalibrationRecord>;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.vuManufacturerName = DataReader.readCodePageString(data, 0, 36).toString();\n        this.vuManufacturerAddress = DataReader.readCodePageString(data, 36, 36).toString();\n        this.vuPartNumber = DataReader.readString(data, 72, 16).toString();\n        this.vuSerialNumber = new ExtendedSerialNumber(data.slice(88));\n        this.vuSoftwareVersion = DataReader.readString(data, 96, 4).toString();\n        this.vuSoftInstallationDate = new TimeReal(data.slice(100));\n        this.vuManufacturingDate = new TimeReal(data.slice(104));\n        this.vuApprovalNumber = DataReader.readString(data, 108, 8).toString();\n        this.sensorSerialNumber = new ExtendedSerialNumber(data.slice(116));\n        this.sensorApprovalNumber = DataReader.readString(data, 124, 8).toString();\n        this.sensorPairingDateFirst = new TimeReal(data.slice(132));\n        this.vuCalibrationRecord = DataReader.readSubblocksByCount<VuCalibrationRecord>(VuCalibrationRecord, data.slice(136 + 1), 0, (DataReader.readUint8(data, 136)));    \n    }\n\n    className() {\n        return \"VuTechnical\";\n    }\n\n    title() {\n        return \"Technical Data\";\n    }\n\n    size() {\n        return 137;\n    }\n\n    toString() {\n\t\tlet qs = new QString('VuTechnical');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"vuManufacturerName\"), this.vuManufacturerName);\n        report.tagValuePair(tr(\"vuManufacturerAddress\"), this.vuManufacturerAddress);\n        report.tagValuePair(tr(\"vuPartNumber\"), this.vuPartNumber);\n        report.writeBlock(this.vuSerialNumber, tr(\"vuSerialNumber\"));\n        report.tagValuePair(tr(\"vuSoftwareVersion\"), this.vuSoftwareVersion);\n        report.tagValuePair(tr(\"vuSoftInstallationDate\"), this.vuSoftInstallationDate.toString());\n        report.tagValuePair(tr(\"vuManufacturingDate\"), this.vuManufacturingDate.toString());\n        report.tagValuePair(tr(\"vuApprovalNumber\"), this.vuApprovalNumber);\n        report.writeBlock(this.sensorSerialNumber, tr(\"sensorSerialNumber\"));\n        report.tagValuePair(tr(\"sensorApprovalNumber\"), this.sensorApprovalNumber);\n        report.tagValuePair(tr(\"sensorPairingDateFirst\"), this.sensorPairingDateFirst.toString());\n        report.writeArray(this.vuCalibrationRecord, tr(\"vuCalibrationRecord\"));\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport TimeReal from 'DataTypes/TimeReal';\nimport VehicleRegistration from 'DataTypes/VehicleRegistration';\nimport FullCardNumber from 'DataTypes/FullCardNumber';\n\n\nexport default class VuCalibrationRecord extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    calibrationPurpose: number;\n    workshopName: string;\n    workshopAddress: string;\n    workshopCardNumber: FullCardNumber;\n    workshopCardExpiryDate: TimeReal;\n    vehicleIdentificationNumber: string;\n    vehicleRegistrationIdentification: VehicleRegistration;\n    wVehicleCharacteristicConstant: number;\n    kConstantOfRecordingEquipment: number;\n    lTyreCircumference: number;\n    tyreSize: string;\n    authorisedSpeed: number;\n    oldOdometerValue: number;\n    newOdometerValue: number;\n    oldTimeValue: TimeReal;\n    newTimeValue: TimeReal;\n    nextCalibrationDate: TimeReal;\n    static staticSize: number = 167;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.calibrationPurpose = DataReader.readUint8(data, 0);\n        this.workshopName = DataReader.readCodePageString(data, 1, 36).toString();\n        this.workshopAddress = DataReader.readCodePageString(data, 37, 36).toString();\n        this.workshopCardNumber = new FullCardNumber(data.slice(73));\n        this.workshopCardExpiryDate = new TimeReal(data.slice(91));\n        this.vehicleIdentificationNumber = DataReader.readString(data, 95, 17).toString();\n        this.vehicleRegistrationIdentification = new VehicleRegistration(data.slice(112));\n        this.wVehicleCharacteristicConstant = DataReader.readUint16(data, 127);\n        this.kConstantOfRecordingEquipment = DataReader.readUint16(data, 129);\n        this.lTyreCircumference = DataReader.readUint16(data, 131);\n        this.tyreSize = DataReader.readString(data, 133, 15).toString();\n        this.authorisedSpeed = DataReader.readUint8(data, 148);\n        this.oldOdometerValue = DataReader.readUint24(data, 149);\n        this.newOdometerValue = DataReader.readUint24(data, 152);\n        this.oldTimeValue = new TimeReal(data.slice(155));\n        this.newTimeValue = new TimeReal(data.slice(159));\n        this.nextCalibrationDate = new TimeReal(data.slice(163));    \n    }\n\n    className() {\n        return \"VuCalibrationRecord\";\n    }\n\n    title() {\n        return \"VuCalibrationRecord\";\n    }\n\n    size() {\n        return 167;\n    }\n\n    toString() {\n\t\tlet qs = new QString('VuCalibrationRecord');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"calibrationPurpose\"), FormatStrings.calibrationPurpose(this.calibrationPurpose));\n        report.tagValuePair(tr(\"workshopName\"), this.workshopName);\n        report.tagValuePair(tr(\"workshopAddress\"), this.workshopAddress);\n        report.writeBlock(this.workshopCardNumber, tr(\"workshopCardNumber\"));\n        report.tagValuePair(tr(\"workshopCardExpiryDate\"), this.workshopCardExpiryDate.toString());\n        report.tagValuePair(tr(\"vehicleIdentificationNumber\"), this.vehicleIdentificationNumber);\n        report.writeBlock(this.vehicleRegistrationIdentification, tr(\"vehicleRegistrationIdentification\"));\n        report.tagValuePair(tr(\"wVehicleCharacteristicConstant\"), new QString(\"%1 Impulses/km\").arg(this.wVehicleCharacteristicConstant).toString());\n        report.tagValuePair(tr(\"kConstantOfRecordingEquipment\"), new QString(\"%1 Impulses/km\").arg(this.kConstantOfRecordingEquipment).toString());\n        report.tagValuePair(tr(\"lTyreCircumference\"), new QString(\"%1 /8 mm\").arg(this.lTyreCircumference).toString());\n        report.tagValuePair(tr(\"tyreSize\"), this.tyreSize);\n        report.tagValuePair(tr(\"authorisedSpeed\"), new QString(\"%1 km/h\").arg(this.authorisedSpeed).toString());\n        report.tagValuePair(tr(\"oldOdometerValue\"), new QString(\"%1 km\").arg(this.oldOdometerValue).toString());\n        report.tagValuePair(tr(\"newOdometerValue\"), new QString(\"%1 km\").arg(this.newOdometerValue).toString());\n        report.tagValuePair(tr(\"oldTimeValue\"), this.oldTimeValue.toString());\n        report.tagValuePair(tr(\"newTimeValue\"), this.newTimeValue.toString());\n        report.tagValuePair(tr(\"nextCalibrationDate\"), this.nextCalibrationDate.toString());\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\n\n\nexport default class VuCardData extends VuBlock {\n\n    static BLOCK_TYPE = 0x6;\n    \n\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.hasSignature = false;    \n    }\n\n    className() {\n        return \"VuCardData\";\n    }\n\n    title() {\n        return \"Card Data\";\n    }\n\n\n\n    toString() {\n\t\tlet qs = new QString('VuCardData');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport Block11Record from 'DataTypes/Block11Record';\n\n\nexport default class Block11 extends VuBlock {\n\n    static BLOCK_TYPE = 0x11;\n    \n\n    header: RawData;\n    block11Record: Subblocks<Block11Record>;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.header = DataReader.readRawData(data, 0, 15);\n        this.block11Record = DataReader.readSubblocksByCount<Block11Record>(Block11Record, data.slice(15 + 2), 0, (DataReader.readUint16(data, 15)));\n        this.hasSignature = false;    \n    }\n\n    className() {\n        return \"Block11\";\n    }\n\n    title() {\n        return \"Unknown Block with TREP 0x11\";\n    }\n\n    size() {\n        return 17;\n    }\n\n    toString() {\n\t\tlet qs = new QString('Block11');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"header\"), this.header.toString());\n        report.writeArray(this.block11Record, tr(\"block11Record\"));\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport Block11Record from 'DataTypes/Block11Record';\n\n\nexport default class Block13 extends VuBlock {\n\n    static BLOCK_TYPE = 0x13;\n    \n\n    header: RawData;\n    block11Record: Subblocks<Block11Record>;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.header = DataReader.readRawData(data, 0, 30);\n        this.block11Record = DataReader.readSubblocksByCount<Block11Record>(Block11Record, data.slice(30 + 2), 0, (DataReader.readUint16(data, 30)));\n        this.hasSignature = false;    \n    }\n\n    className() {\n        return \"Block13\";\n    }\n\n    title() {\n        return \"Unknown Block with TREP 0x13\";\n    }\n\n    size() {\n        return 32;\n    }\n\n    toString() {\n\t\tlet qs = new QString('Block13');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"header\"), this.header.toString());\n        report.writeArray(this.block11Record, tr(\"block11Record\"));\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\n\n\nexport default class Block14 extends VuBlock {\n\n    static BLOCK_TYPE = 0x14;\n    \n\n    data: RawData;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.data = DataReader.readRawData(data, 0, 2);\n        this.hasSignature = false;    \n    }\n\n    className() {\n        return \"Block14\";\n    }\n\n    title() {\n        return \"Unknown Block with TREP 0x14\";\n    }\n\n    size() {\n        return 2;\n    }\n\n    toString() {\n\t\tlet qs = new QString('Block14');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"data\"), this.data.toString());\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport VuTimeAdjustmentRecord from 'DataTypes/VuTimeAdjustmentRecord';\nimport VuEventRecord from 'DataTypes/VuEventRecord';\nimport TimeReal from 'DataTypes/TimeReal';\nimport VuFaultRecord from 'DataTypes/VuFaultRecord';\nimport VuOverspeedingEventRecord from 'DataTypes/VuOverspeedingEventRecord';\n\n\nexport default class VuEventsFaults extends VuBlock {\n\n    static BLOCK_TYPE = 0x3;\n    \n\n    vuFaultRecord: Subblocks<VuFaultRecord>;\n    vuEventRecord: Subblocks<VuEventRecord>;\n    lastOverspeedControlTime: TimeReal;\n    firstOverspeedSince: TimeReal;\n    numberOfOverspeedSince: number;\n    vuOverspeedingEventRecord: Subblocks<VuOverspeedingEventRecord>;\n    vuTimeAdjustmentRecord: Subblocks<VuTimeAdjustmentRecord>;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.vuFaultRecord = DataReader.readSubblocksByCount<VuFaultRecord>(VuFaultRecord, data.slice(0 + 1), 0, (DataReader.readUint8(data, 0)));\n        this.vuEventRecord = DataReader.readSubblocksByCount<VuEventRecord>(VuEventRecord, data.slice(1 + 1), 0, (DataReader.readUint8(data, 1)));\n        this.lastOverspeedControlTime = new TimeReal(data.slice(2));\n        this.firstOverspeedSince = new TimeReal(data.slice(6));\n        this.numberOfOverspeedSince = DataReader.readUint8(data, 10);\n        this.vuOverspeedingEventRecord = DataReader.readSubblocksByCount<VuOverspeedingEventRecord>(VuOverspeedingEventRecord, data.slice(11 + 1), 0, (DataReader.readUint8(data, 11)));\n        this.vuTimeAdjustmentRecord = DataReader.readSubblocksByCount<VuTimeAdjustmentRecord>(VuTimeAdjustmentRecord, data.slice(12 + 1), 0, (DataReader.readUint8(data, 12)));    \n    }\n\n    className() {\n        return \"VuEventsFaults\";\n    }\n\n    title() {\n        return \"Events and faults\";\n    }\n\n    size() {\n        return 13;\n    }\n\n    toString() {\n\t\tlet qs = new QString('VuEventsFaults');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.writeArray(this.vuFaultRecord, tr(\"vuFaultRecord\"));\n        report.writeArray(this.vuEventRecord, tr(\"vuEventRecord\"));\n        report.tagValuePair(tr(\"lastOverspeedControlTime\"), this.lastOverspeedControlTime.toString());\n        report.tagValuePair(tr(\"firstOverspeedSince\"), this.firstOverspeedSince.toString());\n        report.tagValuePair(tr(\"numberOfOverspeedSince\"), this.numberOfOverspeedSince);\n        report.writeArray(this.vuOverspeedingEventRecord, tr(\"vuOverspeedingEventRecord\"));\n        report.writeArray(this.vuTimeAdjustmentRecord, tr(\"vuTimeAdjustmentRecord\"));\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport TimeReal from 'DataTypes/TimeReal';\nimport FullCardNumber from 'DataTypes/FullCardNumber';\n\n\nexport default class VuTimeAdjustmentRecord extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    oldTimeValue: TimeReal;\n    newTimeValue: TimeReal;\n    workshopName: string;\n    workshopAddress: string;\n    workshopCardNumber: FullCardNumber;\n    static staticSize: number = 98;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.oldTimeValue = new TimeReal(data.slice(0));\n        this.newTimeValue = new TimeReal(data.slice(4));\n        this.workshopName = DataReader.readString(data, 8, 36).toString();\n        this.workshopAddress = DataReader.readString(data, 44, 36).toString();\n        this.workshopCardNumber = new FullCardNumber(data.slice(80));    \n    }\n\n    className() {\n        return \"VuTimeAdjustmentRecord\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 98;\n    }\n\n    toString() {\n\t\tlet qs = new QString('VuTimeAdjustmentRecord');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"oldTimeValue\"), this.oldTimeValue.toString());\n        report.tagValuePair(tr(\"newTimeValue\"), this.newTimeValue.toString());\n        report.tagValuePair(tr(\"workshopName\"), this.workshopName);\n        report.tagValuePair(tr(\"workshopAddress\"), this.workshopAddress);\n        report.writeBlock(this.workshopCardNumber, tr(\"workshopCardNumber\"));\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport CardSlots from 'DataTypes/CardSlots';\nimport Timespan from 'DataTypes/Timespan';\n\n\nexport default class VuEventRecord extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    eventType: number;\n    eventRecordPurpose: number;\n    eventTime: Timespan;\n    cardSlots: CardSlots;\n    similarEventsNumber: number;\n    static staticSize: number = 83;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.eventType = DataReader.readUint8(data, 0);\n        this.eventRecordPurpose = DataReader.readUint8(data, 1);\n        this.eventTime = new Timespan(data.slice(2));\n        this.cardSlots = new CardSlots(data.slice(10));\n        this.similarEventsNumber = DataReader.readUint8(data, 82);    \n    }\n\n    className() {\n        return \"VuEventRecord\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 83;\n    }\n\n    toString() {\n\t\tlet qs = new QString('VuEventRecord');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"eventType\"), FormatStrings.eventType(this.eventType));\n        report.tagValuePair(tr(\"eventRecordPurpose\"), FormatStrings.eventRecordPurpose(this.eventRecordPurpose));\n        report.tagValuePair(tr(\"eventTime\"), this.eventTime.toString());\n        report.writeBlock(this.cardSlots, tr(\"cardSlots\"));\n        report.tagValuePair(tr(\"similarEventsNumber\"), this.similarEventsNumber);\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport CardSlots from 'DataTypes/CardSlots';\nimport Timespan from 'DataTypes/Timespan';\n\n\nexport default class VuFaultRecord extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    eventType: number;\n    eventRecordPurpose: number;\n    eventTime: Timespan;\n    cardSlots: CardSlots;\n    static staticSize: number = 82;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.eventType = DataReader.readUint8(data, 0);\n        this.eventRecordPurpose = DataReader.readUint8(data, 1);\n        this.eventTime = new Timespan(data.slice(2));\n        this.cardSlots = new CardSlots(data.slice(10));    \n    }\n\n    className() {\n        return \"VuFaultRecord\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 82;\n    }\n\n    toString() {\n\t\tlet qs = new QString('VuFaultRecord');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"eventType\"), FormatStrings.eventType(this.eventType));\n        report.tagValuePair(tr(\"eventRecordPurpose\"), FormatStrings.eventRecordPurpose(this.eventRecordPurpose));\n        report.tagValuePair(tr(\"eventTime\"), this.eventTime.toString());\n        report.writeBlock(this.cardSlots, tr(\"cardSlots\"));\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport Subblocks from 'DataTypes/Subblocks';\nimport RawData from 'DataTypes/RawData';\nimport DataType from 'DataTypes/DataType';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport FormatStrings from 'utils/FormatStrings';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport Reporter from 'Reporter/Reporter';\n\nimport {tr} from 'utils/Translation';\n\nimport Timespan from 'DataTypes/Timespan';\nimport FullCardNumber from 'DataTypes/FullCardNumber';\n\n\nexport default class VuOverspeedingEventRecord extends DataType {\n\n    static BLOCK_TYPE = 0;\n    \n\n    eventType: number;\n    eventRecordPurpose: number;\n    eventTime: Timespan;\n    maxSpeedValue: number;\n    averageSpeedValue: number;\n    cardNumberDriverSlotBegin: FullCardNumber;\n    similarEventsNumber: number;\n    static staticSize: number = 31;\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n        this.eventType = DataReader.readUint8(data, 0);\n        this.eventRecordPurpose = DataReader.readUint8(data, 1);\n        this.eventTime = new Timespan(data.slice(2));\n        this.maxSpeedValue = DataReader.readUint8(data, 10);\n        this.averageSpeedValue = DataReader.readUint8(data, 11);\n        this.cardNumberDriverSlotBegin = new FullCardNumber(data.slice(12));\n        this.similarEventsNumber = DataReader.readUint8(data, 30);    \n    }\n\n    className() {\n        return \"VuOverspeedingEventRecord\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    size() {\n        return 31;\n    }\n\n    toString() {\n\t\tlet qs = new QString('VuOverspeedingEventRecord');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.tagValuePair(tr(\"eventType\"), FormatStrings.eventType(this.eventType));\n        report.tagValuePair(tr(\"eventRecordPurpose\"), FormatStrings.eventRecordPurpose(this.eventRecordPurpose));\n        report.tagValuePair(tr(\"eventTime\"), this.eventTime.toString());\n        report.tagValuePair(tr(\"maxSpeedValue\"), new QString(\"%1 km/h\").arg(this.maxSpeedValue).toString());\n        report.tagValuePair(tr(\"averageSpeedValue\"), new QString(\"%1 km/h\").arg(this.averageSpeedValue).toString());\n        report.writeBlock(this.cardNumberDriverSlotBegin, tr(\"cardNumberDriverSlotBegin\"));\n        report.tagValuePair(tr(\"similarEventsNumber\"), this.similarEventsNumber);\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport RawData from 'DataTypes/RawData';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport DataType from 'DataTypes/DataType';\nimport FormatStrings from 'utils/FormatStrings';\nimport Reporter from 'Reporter/Reporter';\nimport {tr} from 'utils/Translation';\n\nimport ActivityChangeInfo from 'DataTypes/ActivityChangeInfo';\nimport VuPlaceDailyWorkPeriodRecord from 'DataTypes/VuPlaceDailyWorkPeriodRecord';\nimport VuCardIWRecord from 'DataTypes/VuCardIWRecord';\nimport TimeReal from 'DataTypes/TimeReal';\nimport SpecificConditionRecord from 'DataTypes/SpecificConditionRecord';\n\n\nexport default class VuActivities extends VuBlock {\n\n    static BLOCK_TYPE = 0x2;\n    \n\n    timeReal: TimeReal;\n    odometerValueMidnight: number;\n    vuCardIWRecord: VuCardIWRecord[];\n    activityChangeInfo: ActivityChangeInfo[];\n    vuPlaceDailyWorkPeriodRecord: VuPlaceDailyWorkPeriodRecord[];\n    specificConditionRecord: SpecificConditionRecord[];\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n\n        this.timeReal = new TimeReal(data.slice(0))\n        this.odometerValueMidnight = DataReader.readUint24(data, 4);    \n    }\n\n    className() {\n        return \"VuActivities\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    \n    size() {\n        return 171;\n    }\n\n\n    toString() {\n\t\tlet qs = new QString('VuActivities');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n        report.writeBlock(this.timeReal, tr(\"timeReal\"));\n        report.tagValuePair(tr(\"odometerValueMidnight\"), this.odometerValueMidnight);\n    }\n}\n\n","// This file was AUTO-GENERATED.\n// Make changes in the generator script generate.py,\n// the data definitions in DataDefinitions.xml\n// or derive a class\n\n\nimport * as padStart from 'lodash/padStart';\nimport Block from 'DataTypes/Block';\nimport DataReader from 'utils/DataReader';\nimport Converter from 'utils/Converter';\nimport QString from 'utils/QString';\nimport RawData from 'DataTypes/RawData';\nimport CardBlock from 'CardBlocks/CardBlock';\nimport VuBlock from 'VuBlocks/VuBlock';\nimport DataType from 'DataTypes/DataType';\nimport FormatStrings from 'utils/FormatStrings';\nimport Reporter from 'Reporter/Reporter';\nimport {tr} from 'utils/Translation';\n\nimport VuDetailedSpeedBlock from 'DataTypes/VuDetailedSpeedBlock';\n\n\nexport default class VuDetailedSpeedData extends VuBlock {\n\n    static BLOCK_TYPE = 0x4;\n    \n\n    vuDetailedSpeedBlock: VuDetailedSpeedBlock[];\n    \n    constructor(data: ArrayBuffer) {\n        super(data);\n\n    \n    }\n\n    className() {\n        return \"VuDetailedSpeedData\";\n    }\n\n    title() {\n        return \"\";\n    }\n\n    \n    size() {\n        return 64;\n    }\n\n\n    toString() {\n\t\tlet qs = new QString('VuDetailedSpeedData');\n        return qs.toString();\n    }\n\n    printOn(report: Reporter) {\n\n    }\n}\n\n","\nimport Reporter from 'Reporter/Reporter';\nimport Block from 'DataTypes/Block';\nimport DataType from 'DataTypes/DataType';\nimport Subblocks from 'DataTypes/Subblocks';\nimport * as isEmpty from 'lodash/isEmpty';\nimport QString from 'utils/QString';\nimport CardActivityDailyRecord from 'DataTypes/CardActivityDailyRecord';\n\n\nclass JsonEntry {\n    title: string;\n    className: string;\n    blocks: JsonEntry[];\n\n    constructor(title: string = undefined, className: string = undefined) {\n        this.title = title;\n        this.className = className;\n    }\n\n    static build(title: string = undefined, className: string = undefined) {\n        return {\n            title: title\n        } as JsonEntry;\n    }\n}\n\n\nexport default class JsonReporter extends Reporter {\n\n    jsonCollected: JsonEntry;\n    nestPath: JsonEntry[];\n    currentEntry: JsonEntry;\n    \n    constructor() {\n        super();\n\n        this.jsonCollected = JsonEntry.build();\n        this.nestPath = [this.jsonCollected];\n        this.currentEntry = this.jsonCollected;\n    }\n\n    setTitle(newTitle: string) {\n        super.setTitle(newTitle);\n        this.jsonCollected['title'] = newTitle;\n    }\n\n    normalizeJsonReport() {\n        let r = (this.jsonCollected['CardDriverActivity'] || {}).CardActivityDailyRecord;\n\n        let dailyRecords = {};\n        if (r && r.records) {\n            r.records.forEach((d: CardActivityDailyRecord) => {\n                dailyRecords[d.activityRecordDate.toString()] = d;\n            });\n\n            r['dailyRecords'] = dailyRecords;\n            delete r.records\n        }\n    }\n\n    renderReport(): string {\n        this.normalizeJsonReport();\n        return JSON.stringify(this.jsonCollected, null, 4);\n    }\n\n    tagValuePair(tag: string|QString, value: string) {\n        this.currentEntry[tag.toString()] = value;\n    }\n\n    writeArray<T extends DataType>(ray: Subblocks<T>, title: string = '', defaultShown: boolean = true) {        \n        this.nestLevel += 1;\n        for (let j = 0; j < ray.numberOfBlocks(); j++) {\n            let value = ray.get(j);\n            let tag = value.title() || value.toString();\n            let newEntry = JsonEntry.build(tag, value.className());\n            this.nestPath.push(newEntry);\n\n            if (!this.currentEntry[value.className()]) {\n                this.currentEntry[value.className()] = {\n                    'records': []\n                };\n            }\n            this.currentEntry[value.className()].records.push(newEntry);\n\n            this.currentEntry = newEntry;\n            this.nestLevel += 1;\n\n            this.subBlock(value, tag);\n            \n            this.nestPath.pop();\n            this.currentEntry = this.nestPath.slice(-1)[0];\n            this.nestLevel -= 1;\n        }\n        this.nestLevel -= 1;\n    }\n\n    writeBlock(value: Block, tag: string = '') {\n        if (isEmpty(tag)) {\n            tag = value.title() || value.toString();\n            let newEntry = JsonEntry.build(tag, value.className());\n            this.nestPath.push(newEntry);\n\n            if (!this.currentEntry[value.className()]) {\n                this.currentEntry[value.className()] = newEntry;\n            } else {\n                console.warn(`The block attribute will override ${this.currentEntry}::${value.className}`);\n            }\n\n            this.currentEntry = newEntry;\n            this.nestLevel += 1;\n\n            this.subBlock(value, tag);\n            \n            this.nestPath.pop();\n            this.currentEntry = this.nestPath.slice(-1)[0];\n            this.nestLevel -= 1;\n        } else {\n            let newEntry = JsonEntry.build(value.title() || value.toString(), value.className());\n            this.currentEntry[tag] = newEntry;\n            this.currentEntry = newEntry;\n\n            this.subBlock(value, tag);\n            \n            this.currentEntry = this.nestPath.slice(-1)[0];\n        }\n    }\n\n    subBlock(value: Block, tag: string) {\n\n        value.printOn(this);\n        \n    }\n\n    allowSvg() {\n        return false;\n    }\n\n    arrayStart(count: number, title: string, defaultShown: boolean) {\n        \n    }\n\n    arrayEnd(count: number) {\n    \n    }\n}\n","\nimport Reporter from 'Reporter/Reporter';\nimport Block from 'DataTypes/Block';\nimport * as isEmpty from 'lodash/isEmpty';\nimport QString from 'utils/QString';\nimport {HTML_TEMPLATE} from 'Reporter/HtmlReporterTemplate.html';\n\n\nexport default class HtmlReporter extends Reporter {\n\n    protected linkNumber: number;\n    protected toggleNumber: number;\n    protected linkCollected: string;\n\n    constructor() {\n        super();\n\n        this.linkNumber = 0;\n        this.toggleNumber = 0;\n\n        this.linkCollected = \"<h3>Content</h3><ul>\";\n    }\n\n    renderReport(): string {\n        let html = HTML_TEMPLATE;\n        html = html.replace(/\\$title/g, this.title);\n        html = html.replace(\"$content\", this.collected);\n        html = html.replace(/\\$show/g, \"show\");\n        html = html.replace(/\\$hide/g, \"hide\");\n        html = html.replace(\"$links\", this.linkCollected + \"</ul>\");\n        html = html.replace(/\\$version/g, \"ReadESM (1.0.11)\");\n\n        return html;\n    }\n\n    tagValuePair(tag: string|QString, value: string) {\n        let copy = HtmlReporter.replaceAmp(value.toString());\n        this.collected += `\\n<li>${tag}: <b>${copy}</b></li>`;\n    }\n\n    subBlock(value: Block, tag: string) {\n        let lTag = tag;\n        if (this.nestLevel === 1) {\n            this.linkNumber += 1;\n            this.linkCollected += `<li><a href='#${this.linkNumber}'>${tag}</a></li>`;\n            lTag = `<a name='${this.linkNumber}'>${tag}</a>`;\n        }\n\n        if (this.nestLevel === 1) {\n            this.collected += `\\n<h3>${lTag}</h3>`;\n            this.collected += \"<ul>\";\n            value.printOn(this);\n            this.collected += \"</ul>\";\n        } else {\n            if (!isEmpty(value.toString())) {\n                if (isEmpty(tag)) {\n                    this.collected += this.toggleAbleBlocks(HtmlReporter.replaceAmp(value.toString()), false);\n                } else {\n                    this.collected += this.toggleAbleBlocks(`${lTag}: <b>${HtmlReporter.replaceAmp(value.toString())}</b>`, true);\n                }\n                value.printOn(this);\n                this.collected += \"</ul></li>\";\n            } else {\n                if (!isEmpty(tag)) {\n                    this.collected += `\\n<li>${lTag}: <ul>`;\n                } else {\n                    this.collected += \"\\n<li><ul>\";\n                }\n                value.printOn(this);\n                this.collected += \"</ul></li>\";\n            }\n        }\n    }\n\n    toggleAbleBlocks(title: string, showByDefault: boolean) {\n        this.toggleNumber += 1;\n        return `\\n<li>${title} \n            (<a href='#link${this.toggleNumber}' \n                onclick='return toggle_visibility(${this.toggleNumber});' \n                name='link${this.toggleNumber}' \n                id='link${this.toggleNumber}'>${showByDefault ? 'hide' : 'show'}</a>)\n                <ul style='${showByDefault ? '' : 'display:none'}' \n                    name='toggled${this.toggleNumber}' \n                    id='toggled${this.toggleNumber}'>`\n    }\n\n    allowSvg() {\n        return true;\n    }\n\n    arrayStart(count: number, title: string, defaultShown: boolean) {\n        if (count > 0) {\n            this.collected += this.toggleAbleBlocks(`${count} ${title}`, defaultShown);\n        } else {\n            this.collected += `<li>No ${title}.</li>`\n        }\n    }\n\n    arrayEnd(count: number) {\n        if (count > 0) {\n            this.collected += '</ul></li>';\n        }\n    }\n\n    static replaceAmp(value: string) {\n        return value.replace(/&/g, \"&amp;\");\n    }\n}\n","export const HTML_TEMPLATE: string = \n`<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\" dir=\"ltr\" lang=\"en-US\">\n\n<head>\n\t<title>$title</title>\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n</head>\n<body>\n\n    <style type=\"text/css\">\n        body\t\t\t\t{ font-family:sans-serif }\n        table\t\t\t\t{ border-style:solid; border-collapse:collapse; border-width:2px }\n        tr\t\t\t\t{ border-top-width:1px; border-top-style:dashed }\n        tr:hover\t\t\t{ border-style:outset; background-color:#EEE }\n        .center\t\t\t\t{ text-align:center }\n        th\t\t\t\t{ text-align:left; vertical-align:top }\n        td, th.max, th.avg, th.min\t{ text-align:left; border-left:1px dotted }\n        caption\t\t\t\t{ font-size:0.5em }\n        small\t\t\t\t{ font-size:0.8em }\n    </style>\n    <script type=\"text/javascript\">\n        function toggle_visibility(id) {\n            var toggledContent = document.getElementById('toggled' + id);\n            var link = document.getElementById('link' + id);\n            if (toggledContent.style.display != 'none') {\n                toggledContent.style.display = 'none';\n                link.innerHTML = '$show';\n            } else {\n                toggledContent.style.display = 'block';\n                link.innerHTML = '$hide';\n            }\n            return false;\n        }\n    </script>\n\n<h1>$title</h1>\n$links\n$content\n<hr/>\nReport generated with <a href=\"https://github.com/densolo/readesm-js\" target=\"_blank\">readesm-js</a> <small>($version)</small>.\n</body>\n</html>\n`\n\n"],"sourceRoot":""}